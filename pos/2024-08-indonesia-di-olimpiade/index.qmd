---
title: "Prestasi Indonesia di Olimpiade"
description: "Bagaimana prestasi sepak bola Indonesia dibandingkan dengan negara-negara Asia Tenggara lainnya? Dengan menggunakan data peringkat dunia FIFA, diagram garis dan animasi diagram batang dapat dimanfaatkan untuk menyelidikanya."
draft: true
author:
  - name: Yosep Dwi Kristanto
    url: https://people.usd.ac.id/~ydkristanto/
    affiliation: Pendidikan Matematika, Universitas Sanata Dharma, Yogyakarta
    affiliation-url: https://www.usd.ac.id/s1pmat
    orcid: 0000-0003-1446-0422
date: 2024-08-17
categories:
  - olahraga
  - statistik dunia
  - turorial
  - visualisasi data
image: "indonesia-di-olimpiade.png"
image-alt: |
  Diagram batang yang menunjukkan total poin sepak bola Indonesia dibandingkan dengan sepak bola negara-negara lain di Asia Tenggara.
keywords: 
  - kemerdekaan
  - Republik Indonesia
  - nusantara
  - olimpiade
  - Olimpiade Musim Panas 2024
  - Olimpiade Paris 2024
  - diagram batang
  - diagram garis
copyright: "© 2024 Yosep Dwi Kristanto"
license: "CC BY"
google-scholar: true
code-annotations: select
editor_options: 
  chunk_output_type: console
---

[Olimpiade Musim Panas 2024](https://olympics.com/en/paris-2024 "Paris 2024 Olympics"){.external target="_blank"} telah usai. Olimpiade itu meninggalkan banyak cerita menarik. Salah satu yang banyak diperbincangkan adalah [Kim Yeji](https://olympics.com/en/paris-2024/athlete/yeji-kim_1893930 "KIM Yeji"){.external target="_blank"} dan [Yusuf Dikeç](https://olympics.com/en/paris-2024/athlete/yusuf-dikec_1564893 "DIKEC Yusuf"){.external target="_blank"}. Atlet yang secara berturut-turut membela negara Turki dan Korea Selatan tersebut tidak hanya mengukir prestasi, tetapi juga meninggalkan bekas karena gaya dan penampilannya.

```{=html}
<blockquote class="twitter-tweet" data-lang="id" data-dnt="true"><p lang="en" dir="ltr">The Olympic <a href="https://twitter.com/hashtag/shootingsport?src=hash&amp;ref_src=twsrc%5Etfw">#shootingsport</a> stars we didn’t know we needed.<br><br>🇰🇷 Kim Yeji 🤝 Yusuf Dikeç 🇹🇷 <a href="https://t.co/gfkyGjFg4I">pic.twitter.com/gfkyGjFg4I</a></p>&mdash; The Olympic Games (@Olympics) <a href="https://twitter.com/Olympics/status/1818909520661278729?ref_src=twsrc%5Etfw">1 Agustus 2024</a></blockquote> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
```
Akan tetapi, kita tidak akan memperbincangkan kedua atlet itu. Di suasana [peringatan kemerdekaan Republik Indonesia ini](/pos/2024-08-dirgahayu-indonesia/index.qmd "Dirgahayu Kemerdekaan Republik Indonesia: Persembahan Untuk HUT Ke-79 RI"), kita akan melihat prestasi atlet-atlet Indonesia di Olimpiade Musim Panas. Untuk melakukannya, kita akan menggunakan data yang tersedia di laman Wikipedia.

## Mempersiapkan Data {#sec-mempersiapkan-data}

Kita akan melakukan analisis dan visualisasi data dengan [pemrograman R](https://www.R-project.org/ "R: A Language and Environment for Statistical Computing"){.external target="_blank"}. Pertama, kita panggil paket-paket yang diperlukan. Kita gunakan [{rvest}](https://CRAN.R-project.org/package=rvest "rvest: Easily Harvest (Scrape) Web Pages"){.external target="_blank"} untuk mengimpor data dari sebuah laman web, [{tidyverse}](https://www.tidyverse.org/ "R packages for data science"){.external target="_blank"} untuk menganalisis dan memvisualisasikan data, dan [{ggstream}](https://CRAN.R-project.org/package=ggstream "ggstream: Create Streamplots in 'ggplot2'"){.external target="_blank"} untuk membuat diagram alir.

```{r}
#| echo: true
#| message: false
#| code-fold: false

library(rvest)
library(tidyverse)
library(ggstream)

```

### Mengimpor Data {#sec-mengimpor-data}

Sekarang kita mengimpor datanya. Data tersebut berasal dari laman [Wikipedia](https://id.wikipedia.org/w/index.php?title=Indonesia_pada_Olimpiade&oldid=26147360 "Indonesia pada Olimpiade"){.external target="_blank"}. Data yang kita impor adalah data jumlah medali berdasarkan olimpiade dan cabang olahraganya. Untuk melakukannya, kita menggunakan baris kode seperti berikut.

```{r}
#| echo: true
#| code-fold: false

html <- read_html("https://id.wikipedia.org/w/index.php?title=Indonesia_pada_Olimpiade&oldid=26147360")

daftar_tabel <- html |> 
  html_elements(".wikitable") |> 
  html_table()

print(daftar_tabel)

```

Apa yang dilakukan baris kode di atas? Pertama, kita membaca html pada laman Wikipedia tersebut dan menyimpannya sebagai sebuah sebuah objek dengan nama `html`. Setelah itu, objek `html` tersebut kita cari elemennya yang bernama `.wikitable`.[^1] Setelah elemen tersebut ditemukan, kita baca elemen tersebut sebagai tabel dengan fungsi `html_table()`. Hasil dari proses ini kemudian kita namai sebagai `daftar_tabel`. Untuk melihat apa isi `daftar_tabel` tersebut, kita dapat menggunakan fungsi `print()`.

[^1]: Bagaimana cara menemukan nama elemen dari objek yang ingin kita impor? Salah satunya adalah dengan membaca kode sumber laman webnya. Selain itu, jika kita menggunakan Google Chrome, kita juga dapat memanfaatkan *Developer tools*-nya.

Setelah kita lihat dengan `print()`, ternyata `daftar_tabel` merupakan sebuah [daftar (*list*)](https://people.usd.ac.id/~ydkristanto/index.php/seri-belajar-statistika-dan-ilmu-data-dengan-r/pengantar-r/7/ "Pengantar Pemrograman R"){.external target="_blank"}. Data yang kita inginkan, yaitu data jumlah medali berdasarkan olimpiade dan cabang olahraganya, merupakan elemen kedua dan ketiga dari `daftar_tabel`. Untuk itu, kita dapat mengekstrak kedua data tersebut dengan `daftar_tabel[[1]]` dan `daftar_tabel[[2]]`. Kita namai hasilnya dengan `data_dsr_olimpiade` dan `data_dsr_cabang`.

```{r}
#| echo: true
#| code-fold: false

data_dsr_olimpiade <- daftar_tabel[[2]]
data_dsr_cabang <- daftar_tabel[[3]]

```

### Merapikan Data {#sec-merapikan-data}

Saat ini kita telah memiliki dua data, yaitu `data_dsr_olimpiade` (data jumlah medali berdasarkan penyelenggaraan olimpiade) dan `data_dsr_cabang` (data jumlah medali berdasarkan cabang olahraga). Kita rapikan kedua data tersebut. Untuk merapikan `data_dsr_olimpiade`, kita lihat gambaran umumnya terlebih dahulu dengan fungsi `glimpse()`.

```{r}
#| echo: true
#| code-fold: false

glimpse(data_dsr_olimpiade)

```

`data_dsr_olimpiade` memiliki sembilan variabel. Dari variabel-variabel tersebut, kita pilih lima saja, yaitu `Olimpiade`, `01  Emas`, `02  Perak`, `03  Perunggu`, dan `Peringkat`. Setelah itu kita buat data tersebut menjadi data yang memanjang dengan `pivot_longer()` dan kita rapikan isinya. Untuk memudahkan analisis data selanjutnya, kita tambahkan variabel `tahun`. Variabel ini kita ekstrak dari variabel `Olimpiade` karena nilai-nilai variabel tersebut memuat tahun, misalnya "Helsinki 1952" dan "Melbourne 1956".

```{r}
#| echo: true
#| code-fold: false
#| warning: false

data_dsr_olimpiade <- data_dsr_olimpiade |> 
  select(Olimpiade, `01  Emas`, `02  Perak`, `03  Perunggu`, Peringkat) |> 
  pivot_longer(
    cols = contains("0"),
    names_to = "medali",
    values_to = "banyak"
  ) |> 
  rename(
    olimpiade = Olimpiade,
    peringkat = Peringkat
  ) |> 
  mutate(
    tahun = as.integer(str_extract(olimpiade, "\\d{4}")),
    peringkat = ifelse(
      peringkat == "" | peringkat == "Tidak ikut",
      NA, as.integer(peringkat)
    ),
    medali = substr(medali, 5, nchar(medali)),
    banyak = ifelse(
      banyak == "Tidak ikut",
      NA, as.integer(banyak)
    )
  ) |> 
  select(
    tahun, olimpiade, medali, banyak, peringkat
  )

print(data_dsr_olimpiade)

```

`data_dsr_olimpiade` telah siap tersaji. Sekarang saatnya kita beralih ke `data_dsr_cabang`. Sebelum merapikan data ini, kita lihat datanya terlebih dahulu.

```{r}
#| echo: true
#| code-fold: false

print(data_dsr_cabang)

```

Untuk merapikan data tersebut, kita dapat melakukan beberapa hal. Pertama, kita hapus baris dan kolom terakhirnya (baris dan kolom total). Kedua, kita rapikan isi dari variabel `Cabang`. Ketiga, kita buat data tersebut menjadi data yang memanjang. Terakhir, kita konsistenkan nama variabelnya.

```{r}
#| echo: true
#| code-fold: false

data_dsr_cabang <- data_dsr_cabang |> 
  select(-Total) |> 
  filter(Cabang != "Total (4 cabang)") |> 
  mutate(
    Cabang = str_trim(str_remove(Cabang, " \\(detail\\)"))
  ) |> 
  pivot_longer(
    cols = -Cabang,
    names_to = "medali",
    values_to = "banyak"
  ) |> 
  rename(cabang = Cabang)

print(data_dsr_cabang)
```

`data_dsr_cabang` sekarang sudah rapi. Saatnya kita lanjut ke tahapan berikutnya—visualisasi data.

## Visualisasi Data {#sec-visualisasi-data}

Pada @sec-mempersiapkan-data kita telah mengimpor dan merapikan data tentang banyaknya medali yang diperoleh Indonesia berdasarkan perhelatan olimpiade dan cabang-cabang olahraganya. Selanjutnya, kita akan memvisualisasikan kedua data tersebut.

### Medali dan Perhelatan Olimpiade {#sec-medali-dan-perhelatan-olimpiade}

Bagaimana perolehan medali Indonesia di setiap keikutsertaannya di olimpiade? Untuk menjawab pertanyaan ini, kita dapat membuat diagram batang dengan menggunakan `data_dsr_olimpiade`. Perhatikan @fig-diagram-batang!

```{r}
#| echo: true
#| code-fold: false
#| warning: false
#| label: fig-diagram-batang
#| fig-cap: "Banyaknya medali yang diperoleh Indonesia di setiap olimpiade yang diikutinya"

data_dsr_olimpiade |> 
  ggplot(aes(x = tahun, y = banyak, fill = medali)) + 
  geom_col(position = "dodge") + 
  scale_y_continuous(
    limits = c(0, 4.2),
    expand = c(0, 0)
  ) + 
  scale_fill_manual(
    name = "Medali",
    values = c(
      "Emas" = "#FCC861",
      "Perak" = "#E5E5E5",
      "Perunggu" = "#DCB386"
    )
  ) + 
  theme_minimal() + 
  theme(
    legend.position = "bottom",
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    axis.line.x = element_line(),
    axis.ticks.x = element_line()
  ) + 
  labs(
    x = "Tahun",
    y = "Banyak perolehan medali"
  )

```

Berdasarkan @fig-diagram-batang tersebut, Indonesia pertama kali meraih medali pada tahun 1988 meskipun sudah ikut olimpiade sejak 1952. Bagaimana kalau kita ingin melihat tren perolehan medali emas, perak, dan perunggu setiap penyelenggaraan olimpiadenya? Perhatikan @fig-diagram-garis!

```{r}
#| echo: true
#| code-fold: false
#| warning: false
#| label: fig-diagram-garis
#| fig-cap: "Tren perolehan medali Indonesia di setiap olimpiade yang diikutinya"

data_dsr_olimpiade |> 
  ggplot(aes(x = tahun, y = banyak, col = medali)) + 
  geom_line(
    linewidth = 1
  ) + 
  scale_y_continuous(
    limits = c(0, 4.2),
    expand = c(0, 0)
  ) + 
  scale_color_manual(
    name = "Medali",
    values = c(
      "Emas" = "#FCC861",
      "Perak" = "#E5E5E5",
      "Perunggu" = "#DCB386"
    )
  ) + 
  facet_grid(~medali) + 
  theme_minimal() + 
  theme(
    legend.position = "none",
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.minor.y = element_blank()
  ) + 
  labs(
    x = "Tahun",
    y = "Banyak perolehan medali"
  )
```

Kita dapat menggabungkan fokus informasi yang disampaikan diagram batang pada @fig-diagram-batang dan diagram garis pada @fig-diagram-garis dengan menggunakan diagram alir.

```{r}
#| echo: true
#| code-fold: false
#| warning: false
#| label: fig-diagram-alir
#| fig-cap: "Tren perolehan medali emas, perak, dan perunggu Indonesia di setiap olimpiade yang diikutinya"

data_dsr_olimpiade |> 
  ggplot(aes(x = tahun, y = banyak, fill = medali)) + 
  geom_vline(
    aes(xintercept = tahun),
    color = "grey"
  ) + 
  geom_stream() + 
  geom_text(
    aes(label = olimpiade),
    y = -5,
    angle = 90,
    hjust = 0,
    nudge_x = -1.2,
    color = "grey"
  ) + 
  scale_fill_manual(
    name = "Medali",
    values = c(
      "Emas" = "#FCC861",
      "Perak" = "#E5E5E5",
      "Perunggu" = "#DCB386"
    )
  ) + 
  scale_x_continuous(limits = c(1950, 2024)) + 
  scale_y_continuous(
    limits = c(-5, 3)
  ) + 
  theme_void() + 
  theme(
    legend.position = "none"
  )
```
