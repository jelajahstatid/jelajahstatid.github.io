{
  "hash": "f10d0ec5bdd61669eefacbcf75e8f344",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Gunung Agung, Bromo, Merapi, dan Semeru\"\nsubtitle: \"Seberapa Tinggi dan Besar Keempat Gunung Itu?\"\ndescription: \"Gunung Agung, Bromo, Merapi, dan Semeru termasuk gunung-gunung yang populer di Indonesia. Pemrograman R dapat digunakan untuk memodelkan keempat gunung tersebut ke dalam bentuk 2D maupun 3D. Cara seperti ini dapat digunakan untuk membandingkan seberapa tinggi dan besar gunung-gunung tersebut.\"\nauthor:\n  - name: Yosep Dwi Kristanto\n    url: https://people.usd.ac.id/~ydkristanto/\n    affiliation: Pendidikan Matematika, Universitas Sanata Dharma, Yogyakarta\n    affiliation-url: https://www.usd.ac.id/s1pmat\n    orcid: 0000-0003-1446-0422\ndate: 2024-08-25\ncategories:\n  - Geostatistika\n  - matematika membumi\n  - turorial\n  - visualisasi data\nimage: \"gunung_bromo_3d.png\"\nimage-alt: |\n  Gambar 3D yang menunjukkan Gunung Agung, Bromo, Merapi, dan Semeru secara berdampingan.\nkeywords: \n  - matriks\n  - elevasi\n  - volume\n  - Gunung Agung\n  - Gunung Bromo\n  - Gunung Merapi\n  - Gunung Semeru\ncopyright: \"Â© 2024 Yosep Dwi Kristanto\"\nlicense: \"CC BY\"\ncode-annotations: select\neditor_options: \n  chunk_output_type: console\n---\n\n\nAlkisah ada seorang ksatria yang sakti mandraguna bernama Hanoman. Ksatria yang merupakan seekor kera putih itu suatu ketika diutus oleh Rama untuk mencari tanaman obat di Himalaya. Ia pun pergi ke gunung itu tanpa pikir panjang. Sesampainya di sana, ia baru sadar bahwa ternyata ia tidak mengetahui bentuk dan rupa tanaman itu seperti apa. Tak habis akal, ia pun memotong gunung itu dan membawanya ke hadapan Rama. Akhirnya, Rama dan pasukannya menemukan tanaman obat itu, kemudian mereka memakannya sehingga pulih seperti sedia kala.\n\n![Patung Hanoman di Bali, Indonesia. (Kredit: Wikimedia.org/CC0)](aset/Hanoman_Bali.JPG){#fig-patung-hanoman fig-alt=\"Patung Hanoman di Bali, Indonesia. (Kredit: Wikimedia.org/CC0)\"}\n\nCerita heroik tersebut meninggalkan beberapa pesan. Pertama, kita perlu memberikan instruksi sedetail mungkin agar instruksi tersebut dapat terlaksana dengan efektif dan efisien. Kedua, sikap Hanoman dalam cerita itu menyiratkan keinginan yang sangat kuat untuk menyelesaikan sebuah persoalan. Terakhir, kadang-kadang memindahkan gunung adalah solusi terbaik! Pesan terakhir ini relevan dengan persoalan berikut.\n\n> Bagaimana kita dapat membandingkan seberapa tinggi dan besar gunung-gunung di Indonesia?\n\nKarena begitu banyaknya gunung-gunung di Indonesia, kita pilih empat saja berdasarkan kepopulerannya. Berdasarkan [Google Trends](https://trends.google.com/trends/explore/RELATED_QUERIES/1724521800?hl=in&tz=-120&date=all&geo=ID&hl=in&hl=id&q=gunung&tz=-120&sni=3 \"gunung - Pelajari - Google Trends\"){.external target=\"_blank\"}, keempat gunung tersebut adalah Gunung Agung, Bromo, Merapi, dan Semeru. Untuk membandingkan keempat gunung tersebut, kita dapat \"memindahkannya\" sehingga berdampingan satu sama lain. Dengan demikian, kita dapat mengamatinya secara lebih mudah untuk kemudian kita bandingkan tinggi dan besar keempat gunung tersebut.\n\nTak seperti Hanoman yang memindahkan potongan Gunung Himalaya secara harfiah, kita hanya memindahkan representasi Gunung Agung, Bromo, Merapi, dan Semeru saja. Jika Hanoman melakukan dengan kesaktiannya, kita akan memindahkan keempat gunung tersebut dengan [pemrograman R](https://www.R-project.org/ \"R: A Language and Environment for Statistical Computing\"){.external target=\"_blank\"}. Meskipun ada beberapa perbedaan, apa yang kita lakukan nanti intinya kurang lebih sama dengan yang dilakukan Hanoman.\n\n1.  Seperti halnya Hanoman yang mengetahui posisi fisik Gunung Himalaya, kita juga perlu tahu di mana kita dapat menemukan representasi digital Gunung Agung, Bromo, Merapi, dan Semeru. Representasi digital itu adalah data.\n\n2.  Seperti halnya Hanoman yang membawa potongan Gunung Himalaya, kita juga perlu menggunakan potongan keempat gunung tersebut secukupnya saja.\n\n3.  Seperti halnya Hanoman yang memindahkan Gunung Himalaya ke hadapan Rama, kita juga perlu memindahkan keempat gunung itu di suatu tempat agar mudah diamati dan dibandingkan.\n\nTak perlu berlama-lama, kita keluarkan kesaktian kita. *Eh*, maksudku, kita siapkan alat-alat yang diperlukan.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(rayshader)\n```\n:::\n\n\n## Memahami Ide Dasarnya {#sec-memahami-ide-dasarnya}\n\nSebelum kita menggambar model 3D Gunung Agung, Bromo, Merapi, dan Semeru, baik apabila kita bahas ide dasarnya: beberapa objek 3D itu dapat dinyatakan ke dalam sebuah matriks elevasi. Baris dan kolom matriks tersebut menyatakan koordinat $x$ dan $y$, sedangkan elemen-elemennya menyatakan ketinggiannya. Misalnya, kita memiliki matriks elevasi seperti berikut.\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n   1  2  3  4  5\n1  6 12  9 10 10\n2 11  8  7  8  9\n3 13  8  8  7  9\n4  3  8 10  7 11\n5 11  7 13 17  8\n```\n\n\n:::\n:::\n\n\nDari matriks elevasi tersebut, kita dapat membuat objek 3D dengan berdasarkan ketinggiannya (elemen-elemen matriks) dan posisinya (baris dan kolomnya). Tetapi sebelum itu, terlebih dahulu kita perhatikan proyeksi dua dimensinya seperti yang ditunjukkan pada @fig-proy-3d-sederhana.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Proyeksi 2D dari sebuah objek 3D yang dibentuk dari `matriks_elevasi`](index_files/figure-html/fig-proy-3d-sederhana-1.png){#fig-proy-3d-sederhana width=672}\n:::\n:::\n\n\nApakah kamu dapat membayangkan objek 3D-nya seperti apa jika proyeksi 2D-nya ditunjukkan pada @fig-proy-3d-sederhana? Ingat, warna pada diagram tersebut menggambarkan elevasi/ketinggiannya! Bandingkan imajinasimu dengan @fig-objek-3d-sederhana berikut!\n\n![Objek 3D sederhana](aset/objek_3d_sederhana.png){#fig-objek-3d-sederhana fig-align=\"center\"}\n\nProses seperti itu akan kita lakukan untuk menggambar model 3D Gunung Agung, Bromo, Merapi, dan Semeru. Untuk melakukannya, kita perlu memiliki matriks elevasi keempat gunung tersebut. Matriks tersebut akan kita siapkan pada bagian berikutnya.\n\n## Mempersiapkan Data {#sec-mempersiapkan-data}\n\nSeperti yang telah dijelaskan pada @sec-memahami-ide-dasarnya, kita perlu memiliki matriks elevasi Gunung Agung, Bromo, Merapi, dan Semeru. Matriks ini dapat ditemukan di banyak tempat. Salah satunya di situs webnya [Derek Watkin](https://dwtkns.com/srtm30m/ \"30-Meter SRTM Elevation Data Downloader\"){.external target=\"_blank\"}. Sebelum mengunduh datanya, kamu perlu *login* terlebih dahulu ke dalam situs web [NASA Earthdata](https://urs.earthdata.nasa.gov/users/new \"Earthdata Login User Registration\"){.external target=\"_blank\"}.\n\nSetelah berhasil login, kita perlu mencari persegi tempat keempat gunung tersebut. Untuk mencarinya, kita dapat menyeret dan memperbesar laman dalam situs web tersebut. Lokasi keempat gunung tersebut ada pada enam persegi, yaitu S08E110, S08E112, S08E113, S09E112, S09E113, dan S09E115. Untuk mengunduhnya, klik perseginya dan kemudian klik tombol \"Download DEM\". Setelah itu, ekstrak semua fail zip-nya. Pindahkan fail-fail tersebut ke dalam folder kerjamu.\n\nSampai di sini, kita memiliki enam fail zip dengan nama `S08E110.hgt`, `S08E112.hgt`, `S08E113.hgt`, `S09E112.hgt`, `S09E113.hgt`, dan `S09E115.hgt` dalam folder kerja kita. Kita gunakan semua fail tersebut untuk membuat sebuah matriks elevasi dengan kode berikut.\n\n``` r\nS08E110 <- terra::rast(\"S08E110.hgt\")\nS08E112 <- terra::rast(\"S08E112.hgt\")\nS08E113 <- terra::rast(\"S08E113.hgt\")\nS09E112 <- terra::rast(\"S09E112.hgt\")\nS09E113 <- terra::rast(\"S09E113.hgt\")\nS09E115 <- terra::rast(\"S09E115.hgt\")\n\nmatriks_elevasi <- terra::merge(\n  S08E110, S08E112, S08E113,\n  S09E112, S09E113, S09E115\n)\n```\n\nUntuk memudahkan dalam pengolahan data berikutnya, kita ubah `matriks_elevasi` tersebut menjadi sebuah tibble. Kita jalankan baris kode berikut untuk menghasilkan tibble dengan nama `df_elevasi`.\n\n``` r\ndf_elevasi <- terra::as.data.frame(matriks_elevasi, xy = TRUE) |> \n  as_tibble()\ndf_elevasi <- df_elevasi |> \n  rename(elevasi = S08E110)\n```\n\nSeperti yang dilakukan Hanoman terhadap Gunung Himalaya, kita juga perlu memotong `df_elevasi` agar hanya memuat koordinat $x$ dan $y$ dari Gunung Agung, Bromo, Merapi, dan Semeru seperlunya saja.\n\n``` r\n# Agung\ndf_agung <- df_elevasi |> \n  filter(\n    x >= 115.4562,\n    x <= 115.5562,\n    y >= -8.393267,\n    y <= -8.293267\n  )\ndf_agung <- df_agung |> \n  mutate(\n    gunung = \"Agung\"\n  )\n\n# Bromo\ndf_bromo <- df_elevasi |> \n  filter(\n    x >= 112.9,\n    x <= 113.0,\n    y >= -8.0,\n    y <= -7.9\n  )\ndf_bromo <- df_bromo |> \n  mutate(\n    gunung = \"Bromo\"\n  )\n\n# Merapi\ndf_merapi <- df_elevasi |> \n  filter(\n    x >= 110.3967,\n    x <= 110.4967,\n    y >= -7.590278,\n    y <= -7.490278\n  )\ndf_merapi <- df_merapi |> \n  mutate(gunung = \"Merapi\")\n\n# Semeru\ndf_semeru <- df_elevasi |> \n  filter(\n    x >= 112.8722,\n    x <= 112.9722,\n    y >= -8.157778,\n    y <= -8.057778\n  )\ndf_semeru <- df_semeru |> \n  mutate(\n    gunung = \"Semeru\"\n  )\n```\n\nSelanjutnya, kita gabung semua data dari keempat gunung tersebut menjadi `df_gunung`.\n\n``` r\ndf_gunung <- bind_rows(\n  df_agung, df_bromo, df_merapi, df_semeru\n)\n```\n\n*Nah*, sekarang kita \"pindahkan\" keempat gunung tersebut dari posisi asalnya. Posisi akhir yang kita targetkan adalah posisi dengan koordinat $x$ dan $y$ minimumnya bernilai nol.\n\n``` r\ndf_gunung <- df_gunung |> \n  group_by(gunung) |> \n  mutate(\n    x_trans = x - min(x),\n    y_trans = y - min(y)\n  ) |> \n  ungroup()\n```\n\nApakah sampai di sini kamu berhasil menjalankan baris-baris kode di atas sampai mendapatkan `df_gunung`? Jika iya, selamat! Jika tidak, mungkin ada beberapa hal yang perlu dicek kembali. Tetapi jika kamu langsung ingin mendapatkan `df_gunung` tersebut tanpa menjalankan semua baris kode di atas, kamu dapat mendapatkannya dengan menjalankan kode berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nload(url(\"https://github.com/jelajahstatid/jelajahstatid.github.io/raw/main/pos/2024-08-gunung-agung-bromo-merapi-dan-semeru/aset/df_gunung.RData\"))\n```\n:::\n\n\nKita telah memiliki data untuk menggambarkan Gunung Agung, Bromo, Merapi, dan Semeru secara berdampingan. Kita siap untuk melanjutkan perjalanan kita ke tahapan selanjutnya.\n\n## Memvisualisasikan Data {#sec-memvisualisasikan-data}\n\nKita telah bekerja keras di @sec-mempersiapkan-data. Sekarang, kita masuk ke tahapan yang mengasyikkan. *Yup*, di tahapan ini kita akan memvisualisasikan data. Data yang kita gunakan adalah `df_gunung`. Visualisasi data pertama yang kita lakukan adalah membuat proyeksi 2D dari Gunung Agung, Bromo, Merapi, dan Semeru. Untuk melakukannya, kita gunakan baris kode di bawah ini. Hasilnya ditunjukkan pada @fig-proy-empat-gunung.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nplot_2d_gunung <- df_gunung |> \n  ggplot(\n    aes(x_trans, y_trans)\n  ) + \n  geom_raster(aes(fill = elevasi)) + \n  geom_contour(\n    aes(z = elevasi), \n    breaks = c(seq(500, 3500, by = 250)),\n    color = \"white\",\n    linewidth = .25,\n    alpha = .3\n  ) + \n  scale_fill_gradient(\n    name = \"Elevasi (m)\",\n    low = \"#6DAA55\",\n    high = \"#205544\"\n  ) + \n  facet_wrap(vars(gunung)) + \n  coord_fixed() +\n  theme_minimal() + \n  theme(\n    axis.title = element_blank(),\n    axis.text = element_blank()\n  )\n\nprint(plot_2d_gunung)\n```\n\n::: {.cell-output-display}\n![Proyeksi 2D Gunung Agung, Bromo, Merapi, dan Semeru](index_files/figure-html/fig-proy-empat-gunung-1.png){#fig-proy-empat-gunung width=672}\n:::\n:::\n\n\nBerdasarkan @fig-proy-empat-gunung tersebut, apakah kamu sudah dapat membandingkan tinggi dan besar keempat gunung tersebut? Ya, Gunung Semeru tampak paling tinggi dibandingkan ketiga gunung lainnya. Selain itu, kita dapat melihat bahwa Gunung Bromo tampak relatif lebih luas dibandingkan ketiga gunung lainnya.\n\nUntuk melihat bentuk detailnya, kita dapat menggambar keempat gunung tersebut ke dalam bentuk 3D. Untuk melakukannya, kita gunakan metode yang telah dibahas pada [pos sebelumnya](/pos/2024-08-curah-hujan-indonesia/index.qmd \"Indonesia Negara Dua Musim: Bagaimana Curah Hujannya?\"). Bagaimana caranya? Kita jalankan kode berikut ini.\n\n``` r\nplot_gg(\n  plot_2d_gunung,\n  multicore = TRUE,\n  sunangle = 135,\n  width = 5,\n  height = 5,\n  scale = 250\n)\n```\n\nBeberapa saat setelah kode di atas kita jalankan, kita akan mendapatkan jendela kamera. Melalui jendela tersebut, kita dapat mengatur tampilan objek 3D-nya sesuai yang kita inginkan. Setelah itu, kita jalankan kode berikut untuk merender gambarnya.\n\n``` r\nrender_highquality(\n  filename = \"empat_gunung_3d.png\",\n  samples = 128,\n  preview = TRUE,\n  interactive = FALSE,\n  light = TRUE,\n  width = 1280,\n  height = 720\n)\n```\n\nHasil gambarnya seperti yang ditunjukkan pada @fig-empat-gunung-3d.\n\n![Model 3D Gunung Agung, Bromo, Merapi, dan Semeru](aset/empat_gunung_3d.png){#fig-empat-gunung-3d fig-alt=\"Model 3D Gunung Agung, Bromo, Merapi, dan Semeru\" fig-align=\"center\"}\n\nBerdasarkan @fig-empat-gunung-3d, kita dapat membandingkan tinggi dan besar keempat gunung tersebut. Gunung semeru tampak paling tinggi. Gunung Bromo bentuknya lebih melebar dibandingkan dengan ketiga gunung lainnya. Selain itu, berdasarkan gambar tersebut kita dapat membandingkan bentuk detail keempat gunung tersebut.\n\n## Memperkirakan Tinggi dan Volume {#sec-memperkirakan-tinggi-dan-volume}\n\nSecara sederhana, sebenarnya kita telah dapat membandingkan tinggi dan volume keempat gunung pada @fig-empat-gunung-3d. Akan tetapi, kita juga dapat memperkirakan berapakah tinggi dan volume keempat gunung tersebut.\n\nPertama, kita akan menentukan tinggi Gunung Agung, Bromo, Merapi, dan Semeru. Berdasarkan Wikipedia, tinggi keempat gunung tersebut secara berturut-turut adalah 3.142, 2.614, 2.968, dan 3.676. Sekarang, kita perkirakan tinggi keempat gunung tersebut dengan menggunakan data elevasi dalam `df_gunung`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nketinggian <- df_gunung |> \n  group_by(gunung) |> \n  summarise(\n    elevasi_maksimum = max(elevasi, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nprint(ketinggian)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã 2\n  gunung elevasi_maksimum\n  <chr>             <int>\n1 Agung              3013\n2 Bromo              2775\n3 Merapi             2918\n4 Semeru             3669\n```\n\n\n:::\n:::\n\n\nMeskipun hasilnya berbeda dengan informasi dalam Wikipedia, kita mendapatkan ketinggian-ketinggian yang tak jauh berbeda. Agar lebih mudah dalam membandingkan tinggi keempat gunung tersebut, kita buat diagram batangnya. Diagram batang tersebut disajikan pada @fig-diagram-batang-tinggi-gunung.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nketinggian |> \n  mutate(gunung = fct_reorder(gunung, -elevasi_maksimum)) |> \n  ggplot(aes(x = gunung, y = elevasi_maksimum)) + \n  geom_col(\n    aes(fill = elevasi_maksimum),\n    show.legend = FALSE\n  ) + \n  scale_fill_viridis_c() + \n  theme_minimal() + \n  labs(\n    x = \"Gunung\",\n    y = \"Ketinggian (mdpl)\"\n  )\n```\n\n::: {.cell-output-display}\n![Ketinggian Gunung Agung, Bromo, Merapi, dan Semeru](index_files/figure-html/fig-diagram-batang-tinggi-gunung-1.png){#fig-diagram-batang-tinggi-gunung width=672}\n:::\n:::\n\n\nBerikutnya, kita akan memperkirakan volume keempat gunung tersebut. Volume yang dimaksud di sini adalah volume potongan tiap gunung pada @fig-empat-gunung-3d. Untuk itu, kita hitung ada berapa petak data dalam setiap data gunungnya.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf_gunung |> \n  group_by(gunung) |> \n  summarise(\n    banyak_petak = n(),\n    .groups = \"drop\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã 2\n  gunung banyak_petak\n  <chr>         <int>\n1 Agung        129600\n2 Bromo        129960\n3 Merapi       129600\n4 Semeru       129600\n```\n\n\n:::\n:::\n\n\nSebagian besar, banyak petaknya adalah 129.600 kecuali data untuk Gunung Bromo. Untuk itu, banyak petak pada Gunung Bromo kita samakan saja dengan ketiga gunung lainnya.\n\nAlas potongan gunung-gunung tersebut memiliki ukuran 0,1 derajat Ã 0,1 derajat. Karena 0,1 derajat kurang lebih sama dengan 110 km, ukuran alasnya berarti 11 km Ã 11 km dan luasnya adalah 121 km^2^ atau 121.000.000 m^2^. Padahal alas tersebut berisi 129.600 petak. Dengan demikian, luas petak tersebut dapat dihitung seperti berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nluas_petak_est <- 121000000 / 129600\nprint(luas_petak_est)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 933.642\n```\n\n\n:::\n:::\n\n\nDengan demikian, kita memeroleh luas per petaknya sekitar 933,642 m^2^. Sekarang coba kita kembali ke belakang. Ketika kita mengunduh data matriks elevasi dari situs webnya Derek Watkin, di situ terdapat keterangan seperti berikut.\n\n> This interface attempts to ease the pain of downloading *30-meter resolution* elevation data from the Shuttle Radar Topography Mission.\n\nYup, petak-petak tersebut ukurannya adalah 30 m Ã 30 m. Dengan demikian, luas petaknya adalah 900 m^2^. Perkiraan kita tadi cukup dekat dengan nilai ini.\n\nVolume potongan keempat gunung tersebut merupakan jumlah dari hasil kali luas setiap petak dan tinggi petak tersebut.\n\n$$\n\\text{Volume} = \\sum_{i=1}^{n} L_{i} \\cdot h_{i}\n$$\n\ndengan $L_{i}$ dan $h_{i}$ secara berturut-turut adalah luas dan tinggi tiap-tiap petak. Nah, sekarang kita hitung volume keempat gunung tersebut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nvolume <- df_gunung |> \n  mutate(\n    volume_petak = 900 * elevasi\n  ) |> \n  group_by(gunung) |> \n  summarise(\n    volume_m3 = sum(volume_petak),\n    .groups = \"drop\"\n  )\n\nprint(volume)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã 2\n  gunung    volume_m3\n  <chr>         <dbl>\n1 Agung  157764598200\n2 Bromo  257926200300\n3 Merapi 164324547900\n4 Semeru 237914817300\n```\n\n\n:::\n:::\n\n\nKarena kita biasanya lebih mudah membayangkan volume dengan satuan liter, kita dapat mengkonversi satuan volumenya menjadi liter.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nvolume <- volume |> \n  mutate(\n    volume_liter = volume_m3 * 1000\n  )\n\nprint(volume)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 Ã 3\n  gunung    volume_m3 volume_liter\n  <chr>         <dbl>        <dbl>\n1 Agung  157764598200      1.58e14\n2 Bromo  257926200300      2.58e14\n3 Merapi 164324547900      1.64e14\n4 Semeru 237914817300      2.38e14\n```\n\n\n:::\n:::\n\n\nPotongan gunung manakah yang paling besar? Potongan gunung Bromo-lah yang paling besar, yaitu sekitar 2,58 Ã 10^14^ liter. Selanjutnya kita buat diagram batang yang merepresentasikan volume potongan keempat gunung tersebut. Hasilnya disajikan pada @fig-diagram-batang-volume-gunung.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nvolume |> \n  mutate(\n    gunung = fct_reorder(gunung, -volume_liter)\n  ) |> \n  ggplot(aes(x = gunung, y = volume_liter)) + \n  geom_col(\n    aes(fill = volume_liter),\n    show.legend = FALSE\n  ) + \n  scale_fill_viridis_c() + \n  theme_minimal() + \n  labs(\n    x = \"Gunung\",\n    y = \"Volume (liter)\"\n  )\n```\n\n::: {.cell-output-display}\n![Volume potongan Gunung Agung, Bromo, Merapi, dan Semeru](index_files/figure-html/fig-diagram-batang-volume-gunung-1.png){#fig-diagram-batang-volume-gunung width=672}\n:::\n:::\n\n\n## Catatan Akhir {#sec-catatan-akhir}\n\nKita telah membandingkan seberapa tinggi dan besar Gunung Agung, Bromo, Merapi, dan Semeru. Hal itu kita lakukan dengan dua jalan: pengamatan dan perhitungan. Ketika menggunakan cara pengamatan, kita gambarkan representasi keempat gunung tersebut ke dalam bentuk 2D maupun 3D. Hasilnya seperti dapat dilihat pada @fig-proy-empat-gunung dan @fig-empat-gunung-3d. Ketika kita menggunakan cara perhitungan, kita gunakan data matriks elevasi keempat gunung tersebut untuk memperkirakan tinggi dan volumenya. Cara ini kita lakukan pada @sec-memperkirakan-tinggi-dan-volume.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}