{
  "hash": "25d01fdac6a0a7449b3e809a096db016",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulasi Monte Carlo\"\nsubtitle: \"Memvisualisasikan Masalah Jarum Buffon\"\ndescription: \"Bagaimana menggunakan simulasi Monte Carlo untuk menyelesaikan masalah jarum Buffon? Artikel ini akan mendemonstrasikan bagaimana memvisualisasikan dan menganimasikan simulasi Monte Carlo untuk masalah paling awal yang diajukan dan diselesaikan di Peluang Geometris, yaitu masalah jarum Buffon.\"\ndraft: true\nauthor:\n  - name: Yosep Dwi Kristanto\n    url: https://people.usd.ac.id/~ydkristanto/\n    affiliation: Pendidikan Matematika, Universitas Sanata Dharma, Yogyakarta\n    affiliation-url: https://www.usd.ac.id/s1pmat\n    orcid: 0000-0003-1446-0422\ndate: 2025-10-31\ncategories:\n  - Peluang\n  - Geometri\n  - tutorial\nimage: \"sampul-masalah-jarum-buffon.png\"\nimage-alt: \"Simulasi masalah jarum Buffon untuk memvisualisasikan peluang jarum melintasi garis\"\nkeywords: \n  - eksperimen\n  - Hukum Bilangan Besar\n  - masalah jarum Buffon\n  - simulasi Monte Carlo\nlightbox: true\ncopyright: \"© 2025 Yosep Dwi Kristanto\"\nlicense: \"CC BY\"\ncode-annotations: below\neditor_options: \n  chunk_output_type: console\n---\n\nBayangkan kamu bermain sebuah gim. Dalam gim tersebut, kamu memiliki selembar kertas bergaris dan lidi. Panjang lidi tersebut sama dengan jarak antargaris pada kertas itu. Jika lidi tersebut dilemparkan secara acak ke kertas tersebut, kamu perlu menebak apakah lidi tersebut mengenai garis atau tidak. Jika tebakanmu benar, kamu menang. Tebakan mana yang kamu pilih?\n\nGim itu adalah bentuk adaptasi dari sebuah masalah paling awal yang diajukan dan diselesaikan di [Peluang Geometris](https://doi.org/10.1007/s004070100038 \"Nineteenth-Century Developments in Geometric Probability: J. J. Sylvester, M. W. Crofton, J.-É. Barbier, and J. Bertrand\"){.external target=\"_blank\"}, masalah jarum Buffon. Masalah ini menarik karena melibatkan peluang dan geometri. Dengan demikian, kita akan memvisualisasikan masalah ini secara geometris untuk dapat melihat berapa peluangnya. Untuk melakukannya, kita menggunakan simulasi Monte Carlo.\n\n## Simulasi Monte Carlo {#sec-simulasi-monte-carlo}\n\nSimulasi Monte Carlo, atau sering dikenal dengan metode Monte Carlo, merupakan sebuah teknik matematis yang digunakan untuk memperkirakan kemungkinan luaran dari kejadian yang tak pasti. Dengan demikian, kita dapat menggunakan simulasi ini terhadap masalah jarum Buffon. Tujuannya beberapa hal, yaitu untuk:\n\n-   membandingkan banyaknya jarum yang melintasi garis dan tidak dalam sebuah eksperimen;\n\n-   mengilustrasikan [Hukum Bilangan Besar](https://people.usd.ac.id/~ydkristanto/app/hukum-bil-besar/ \"Hukum Bilangan Besar\"){.external target=\"_blank\"} terhadap peluang empiris kejadian jarum yang melintasi garis;\n\n-   memperkirakan nilai pi ($\\pi$).\n\nSelanjutnya, mari kita melakukan tujuan yang pertama pada bagian berikutnya.\n\n## Simulasi Masalah Jarum Buffon {#sec-simulasi-masalah-jarum-buffon}\n\nKita menggunakan [pemrograman R](https://www.R-project.org/ \"R Foundation for Statistical Computing\"){.external target=\"_blank\"} untuk mensimulasikan masalah jarum Buffon. Untuk melakukannya, kita memanfaatkan tiga paket, yaitu [{tidyverse}](https://tidyverse.org/ \"R packages for Data Science\"){.external target=\"_blank\"}, [{gganimate}](https://CRAN.R-project.org/package=gganimate \"gganimate: A Grammar of Animated Graphics\"){.external target=\"_blank\"}, dan [{magick}](https://CRAN.R-project.org/package=magick \"magick: Advanced Graphics and Image-Processing in R\"){.external target=\"_blank\"}. Mari terlebih dahulu kita memanggil ketiga paket tersebut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(tidyverse) # <1>\nlibrary(scales)    # <2>\nlibrary(gganimate) # <3>\nlibrary(magick)    # <4>\n```\n:::\n\n\n1.  Kita menggunakan {tidyverse} untuk mempersiapkan data dalam mensimulasikan masalah jarum Buffon.\n2.  Paket {scales} kita pakai untuk mengatur skala diagram-diagram yang akan kita buat.\n3.  Paket {gganimate} kita gunakan untuk menganimasikan simulasi masalah jarum Buffon.\n4.  Kita memanfaatkan {magick} untuk menggabungkan gambar-gambar animasi ke dalam sebuah gambar animasi yang tersinkron.\n\n### Deskripsi Masalah {#sec-deskripsi-masalah}\n\nMasalah jarum Buffon kurang lebih deskripsinya adalah sebagai berikut.\n\n> Perhatikan selembar kertas bergaris-garis sejajar yang jarak antargaris berdekatannya $d$ satuan dan sebuah jarum yang panjangnya $l$, dengan $l = d$. Jika kita melemparkan jarum tersebut pada kertas itu secara acak, berapakah peluang jarum tersebut memotong garis pada kertas itu?\n\nTanpa mengurangi generalisasi, kita dapat mengasumsikan bahwa garis-garis pada kertas itu adalah garis-garis yang horizontal dan jarak antargaris berdekatannya $d=1$ satuan. Dengan demikian, panjang jarumnya $l = d = 1$. Asumsi seperti ini akan memudahkan kita untuk mensimulasikan masalah tersebut.\n\nTerdapat dua elemen penting dalam memvisualisasikan masalah jarum Buffon tersebut, yaitu kertas bergaris dan jarumnya. Kedua elemen tersebut dapat kita visualisasikan dengan {ggplot2}, yang merupakan bagian dari {tidyverse}. Selanjutnya, kita bahas kedua elemen tersebut pada @sec-selembar-kertas dan @sec-sebuah-jarum.\n\n### Selembar Kertas {#sec-selembar-kertas}\n\nKita memilih kertas yang berukuran 10 × 10. Karena kertas ini bergaris-garis horizontal dan jarak antargaris berdekatannya 1 satuan, kita dapat memvisualisasikannya dengan menggunakan kode pada @lst-kertas-bergaris. Hasilnya ditunjukkan pada @fig-kertas-bergaris.\n\n\n::: {.cell}\n\n```{#lst-kertas-bergaris .r .cell-code  lst-cap=\"Kode untuk membuat kertas bergaris\" code-fold=\"false\"}\nkertas <- ggplot() + \n  geom_hline(\n    yintercept = 0:10,\n    color = \"gray80\",\n    linewidth = 0.5\n  ) + \n  coord_equal(\n    xlim = c(0, 10),\n    ylim = c(0, 10)\n  ) + \n  scale_x_continuous(\n    breaks = 0:10\n  ) + \n  scale_y_continuous(\n    breaks = 0:10\n  ) + \n  theme_bw() + \n  theme(\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(c(.5, .5, .5, .5), \"cm\")\n  )\n\nkertas\n```\n\n::: {.cell-output-display}\n![Kertas bergaris horizontal berukuran 10 × 10 yang jarak antargarisnya 1 satuan](index_files/figure-html/fig-kertas-bergaris-1.png){#fig-kertas-bergaris width=672}\n:::\n:::\n\n\n### Sebuah Jarum {#sec-sebuah-jarum}\n\nBagaimana kita dapat membuat jarumnya? Kita dapat memvisualisasikan jarum dalam masalah ini dengan menggunakan ruas garis yang ujung-ujungnya adalah titik-titik $\\left( x_{1}, y_{1} \\right)$ dan $\\left( x_{2}, y_{2} \\right)$, perhatikan @fig-sebuah-jarum.\n\n![Sebuah jarum yang direpresentasikan dengan sebuah ruas garis](aset/sebuah-jarum-01.png){#fig-sebuah-jarum}\n\nKoordinat kedua ujung ruas garis tersebut saling berkaitan karena jarak keduanya haruslah $l=1$ satuan. Jika $\\theta$ adalah besar sebuah sudut yang dibentuk oleh sebuah sinar garis horizontal ke kanan yang pangkalnya $\\left(x_{1},y_{1}\\right)$ dan ruas garis tersebut, koordinat $\\left( x_{2}, y_{2} \\right)$ dapat ditentukan dengan menggunakan @eq-koord-titik-kedua.\n\n$$\n\\begin{matrix}\nx_{2}=x_{1}+1\\cdot\\cos\\left(\\theta\\right)\\\\\ny_{2}=y_{1}+1\\cdot\\sin\\left(\\theta\\right)\n\\end{matrix}\n$$ {#eq-koord-titik-kedua}\n\ndengan $0 \\leq \\theta \\leq 2\\pi$. Berdasarkan @eq-koord-titik-kedua, kita memerlukan tiga nilai, yaitu $x_{1}$, $y_{1}$, dan $\\theta$, untuk membuat sebuah jarum pada kertas. Sebagai contoh, untuk $x_{1}=6$, $y_{1}=\\text{5,5}$, dan $\\theta=\\frac{4}{3}\\pi$, jarumnya disajikan pada @fig-contoh-jarum.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Sebuah jarum dengan $x_{1}=4$, $y_{1}=\\text{5,5}$, dan $\\theta=\\frac{4}{3}\\pi$](index_files/figure-html/fig-contoh-jarum-1.png){#fig-contoh-jarum width=672}\n:::\n:::\n\n\n@fig-contoh-jarum memperlihatkan secara jelas bahwa jarumnya memotong sebuah garis. Namun bagaimana kita dapat mengetahui apakah sembarang jarum yang diketahui $x_{1}$, $y_{1}$, dan $\\theta$-nya memotong garis atau tidak? Untuk menjawab pertanyaan ini, perhatikan @fig-jarum-dan-garis.\n\n![Jarum-jarum yang memotong garis dan yang tidak](aset/jarum-dan-garis-01.png){#fig-jarum-dan-garis}\n\nBerdasarkan @fig-jarum-dan-garis, kita dapat melihat bahwa jarum yang memotong garis pada kertas nilai $h$-nya lebih besar dari jarak vertikal antara titik tengah jarum tersebut dan garis terdekatnya, yaitu $d_{h}$. Padahal, $h=\\frac{1}{2}\\cdot\\sin\\left(\\theta_{l}\\right)$ degan $\\theta_{l}$ adalah sudut lancip yang dibentuk oleh jarum dan garis horizontal.\n\nPerhatikan juga bahwa garis-garis pada kertas yang kita buat pada @lst-kertas-bergaris memiliki koordinat-$y$ yang merupakan bilangan bulat. Dengan demikian, kita mendapatkan $d_{h}=\\text{min}\\left(\\left | y_{t}-\\left \\lfloor y_{t}\\right \\rfloor\\right |,\\left | y_{t}-\\left \\lceil y_{t}\\right \\rceil\\right |\\right)$ dengan $y_{t}$ adalah koordinat-$y$ titik tengah jarum tersebut. Dengan demikian, sebuah jarum yang memotong garis memenuhi kondisi pada @eq-kondisi.\n\n$$\n\\frac{1}{2}\\sin\\left(\\theta_{l}\\right)\\geq \\text{min}\\left(\\left | y_{t}-\\left \\lfloor y_{t}\\right \\rfloor\\right |,\\left | y_{t}-\\left \\lceil y_{t}\\right \\rceil\\right |\\right)\n$$ {#eq-kondisi}\n\nKita gunakan kondisi tersebut terhadap jarum pada @fig-contoh-jarum untuk menentukan apakah jarum tersebut memotong garis atau tidak (walaupun faktanya kita telah mengetahuinya).\n\n\n::: {.cell}\n\n```{#lst-uji-kondisi .r .cell-code  lst-cap=\"Menguji kondisi apakah jarumnya memotong garis\" code-fold=\"false\"}\ny_t <- (y_1 + (y_1 + sin(t_heta))) / 2 # <1>\ntheta_l <- abs(t_heta %% pi - pi/2)   # <2>\nh <- 1 / 2 * sin(theta_l)             # <3>\nd_h <- min(                           # <4>\n  abs(y_t - floor(y_t)),              # <4>\n  abs(y_t - ceiling(y_t))             # <4>\n)\n\npotong_garis <- if_else(                # <5>\n  h >= d_h, \"Memotong\", \"Tak memotong\"  # <5>\n)                                       # <5>\n\npotong_garis                            # <6>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Memotong\"\n```\n\n\n:::\n:::\n\n\n1.  Menghitung koordinat-$y$ titik tengah jarum, dan nilainya dinamai dengan `y_t`.\n2.  Menentukan sudut lancip $\\theta_{l}$ dan hasilnya kita namai dengan `theta_l`.\n3.  Menghitung nilai $h$.\n4.  Menghitung nilai $d_{h}$ dan hasilnya dinamai dengan `d_h`.\n5.  Mendefinisikan kondisi yang telah dibahas sebelumnya, dan hasilnya dinamai dengan `potong_garis`.\n6.  Mencetak nilai `potong_garis`.\n\nKita telah berhasil menggunakan kondisi di atas untuk menentukan apakah jarum pada @fig-contoh-jarum memotong garis atau tidak. Hasilnya sesuai dengan pengamatan kita tentu saja.\n\n### Eksperimen Pelemparan Jarum {#sec-eksperimen-pelemparan-jarum}\n\nSampai di sini kita telah dapat membuat selembar kertas dan sebuah jarum. Kita juga telah mengetahui kondisi jarum tersebut untuk memotong garis pada kertas. Sekarang kita akan memvisualisasikan sebuah eksperimen pelemparan jarum sebanyak $n$ kali. Misalnya, kita memilih $n = 100$ kali. Setiap pelemparan tersebut kita perlu menyediakan tiga nilai, yaitu $x_{1}$, $y_{1}$, dan $\\theta$, secara acak. Dalam R, kita dapat menggunakan fungsi `runif()`. Fungsi ini akan memberikan satu atau lebih nilai acak dari distribusi seragam dengan nilai minimum dan maksimum yang diberikan.\n\nKita buat sebuah data dengan nama `data_eksperimen` untuk memuat hasil eksperimen pelemparan jarum sebanyak $n=100$ kali tersebut. Untuk melakukannya, kita gunakan kode pada @lst-data-eksperimen. Kita dapat melihat gambaran umum data ini dengan `glimpse()`.\n\n\n::: {.cell}\n\n```{#lst-data-eksperimen .r .cell-code  lst-cap=\"Membuat `data_eksperimen` yang memuat luaran setiap percobaan dalam eksperimen\" code-fold=\"false\"}\nset.seed(1234)         # <1>\npalet_warna <- c(      # <2>\n  \"#4269d0\",\"#efb118\", # <2>\n  \"#ff725c\",\"#6cc5b0\", # <2>\n  \"#3ca951\",\"#ff8ab7\", # <2>\n  \"#a463f2\",\"#97bbf5\", # <2>\n  \"#9c6b4e\",\"#9498a0\"  # <2>\n)                     # <2>\n\ndata_eksperimen <- tibble(\n  x1 = runif(100, min = 1, max = 9),        # <3>\n  y1 = runif(100, min = 1, max = 9),        # <3>\n  theta = runif(100, min = 0, max = 2 * pi) # <3>\n) |> \n  mutate(                                      # <4>\n    percobaan = row_number(),                  # <4>\n    x2 = x1 + 1 * cos(theta),                  # <4>\n    y2 = y1 + 1 * sin(theta),                  # <4>\n    warna = palet_warna[(percobaan %% 10) + 1] # <4>\n  )\n\nglimpse(data_eksperimen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 100\nColumns: 7\n$ x1        <dbl> 1.909627, 5.978395, 5.874198, 5.987036, 7.887323, 6.122485, …\n$ y1        <dbl> 1.283654, 5.520609, 3.242062, 2.633571, 2.069911, 3.605455, …\n$ theta     <dbl> 4.1516438, 3.3197799, 1.9948725, 4.8245782, 3.3068938, 4.601…\n$ percobaan <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ x2        <dbl> 1.3778099, 4.9942286, 5.4627189, 6.0989896, 6.9009542, 6.011…\n$ y2        <dbl> 0.4367948, 5.3433631, 4.1534815, 1.6398571, 1.9053618, 2.611…\n$ warna     <chr> \"#efb118\", \"#ff725c\", \"#6cc5b0\", \"#3ca951\", \"#ff8ab7\", \"#a46…\n```\n\n\n:::\n:::\n\n\n1.  Mengatur benih pengacakan agar hasilnya dapat diproduksi kembali.\n2.  Membuat palet warna sebagai warna setiap jarumnya.\n3.  Menyediakan bilangan-bilangan `x1`, `y1`, dan `theta` secara acak.\n4.  Menghitung `x2` dan `y2`, serta membuat variabel `percobaan` untuk memberikan identitas terhadap setiap percobaannya dan `warna` untuk memberikan warna terhadap setiap jarum yang dihasilkan.\n\nKita telah memiliki `data_eksperimen` yang memiliki tujuh variabel dan 100 baris. Baris-baris tersebut menggambarkan hasil percobaannya.\n\nSelanjutnya, kita akan menentukan apakah setiap percobaan dalam `data_eksperimen` menghasilkan jarum yang memotong garis atau tidak. Untuk melakukannya, kita menerapkan ide pada @lst-uji-kondisi untuk membuat variabel baru, yaitu `potong`, dalam data tersebut. Perhatikan @lst-data-eksperimen-lengkap!\n\n\n::: {.cell}\n\n```{#lst-data-eksperimen-lengkap .r .cell-code  lst-cap=\"Menambahkan informasi apakah jarumnya memotong garis atau tidak\" code-fold=\"false\"}\ndata_eksperimen <- data_eksperimen |> \n  mutate(\n    yt = (y1 + y2) / 2,\n    theta_l = abs(theta %% pi - pi/2),\n    h = 1 / 2 * sin(theta_l),\n    d_h = pmin(\n      abs(yt - floor(yt)),\n      abs(yt - ceiling(yt))\n    ),\n    potong = if_else(\n      h >= d_h,\n      \"Memotong\",\n      \"Tak memotong\"\n    )\n  )\n\nglimpse(data_eksperimen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 100\nColumns: 12\n$ x1        <dbl> 1.909627, 5.978395, 5.874198, 5.987036, 7.887323, 6.122485, …\n$ y1        <dbl> 1.283654, 5.520609, 3.242062, 2.633571, 2.069911, 3.605455, …\n$ theta     <dbl> 4.1516438, 3.3197799, 1.9948725, 4.8245782, 3.3068938, 4.601…\n$ percobaan <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 1…\n$ x2        <dbl> 1.3778099, 4.9942286, 5.4627189, 6.0989896, 6.9009542, 6.011…\n$ y2        <dbl> 0.4367948, 5.3433631, 4.1534815, 1.6398571, 1.9053618, 2.611…\n$ warna     <chr> \"#efb118\", \"#ff725c\", \"#6cc5b0\", \"#3ca951\", \"#ff8ab7\", \"#a46…\n$ yt        <dbl> 0.8602243, 5.4319860, 3.6977718, 2.1367138, 1.9876365, 3.108…\n$ theta_l   <dbl> 0.56074517, 1.39260910, 0.42407619, 0.11218922, 1.40549519, …\n$ h         <dbl> 0.26590870, 0.49208331, 0.20573949, 0.05597701, 0.49318442, …\n$ d_h       <dbl> 0.13977571, 0.43198600, 0.30222817, 0.13671384, 0.01236349, …\n$ potong    <chr> \"Memotong\", \"Memotong\", \"Tak memotong\", \"Tak memotong\", \"Mem…\n```\n\n\n:::\n:::\n\n\nData yang kita miliki telah memuat informasi yang kita perlukan. Kita dapat melakukan analisis sederhana terhadap `data_eksperimen` tersebut. Misalnya, kita dapat melihat berapa jarum yang memotong garis dan yang tidak dengan kode pada @lst-analisis-dasar-data-eksperimen.\n\n\n::: {.cell}\n\n```{#lst-analisis-dasar-data-eksperimen .r .cell-code  lst-cap=\"Menghitung banyak jarum yang memotong garis dan yang tidak\"}\ndata_eksperimen |> \n  group_by(potong) |> \n  summarise(\n    frekuensi = n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 2\n  potong       frekuensi\n  <chr>            <int>\n1 Memotong            60\n2 Tak memotong        40\n```\n\n\n:::\n:::\n\n\n### Visualisasi Hasil Eksperimen {#sec-visualisasi-hasil-eksperimen}\n\nKita dapat memvisualisasikan hasil 100 percobaan dalam `data_eksperimen`. Dengan menggunakan `x1`, `y1`, `x2`, dan `y2`, kita dapat menggambarkan jarum yang dihasilkan oleh setiap percobaan. Kita dapat melakukannya dengan kode pada @lst-vis-hasil-eksperimen. Hasilnya ditunjukkan pada @fig-vis-hasil-eksperimen.\n\n\n::: {.cell}\n\n```{#lst-vis-hasil-eksperimen .r .cell-code  lst-cap=\"Memvisualisasikan setiap luaran dalam eksperimen\" code-fold=\"false\"}\nhasil_eksperimen <- data_eksperimen |> \n  ggplot() + \n  geom_hline(\n    yintercept = 0:10,\n    color = \"gray80\",\n    linewidth = 0.5\n  ) + \n  geom_segment(\n    aes(\n      x = x1, y = y1,\n      xend = x2, yend = y2,\n      color = warna\n    ),\n    linewidth = 1.5\n  ) + \n  coord_equal(\n    xlim = c(0, 10),\n    ylim = c(0, 10)\n  ) + \n  scale_x_continuous(\n    breaks = 0:10\n  ) + \n  scale_y_continuous(\n    breaks = 0:10\n  ) + \n  scale_color_identity() + \n  theme_bw() + \n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(c(.5, .5, .5, .5), \"cm\")\n  )\n\nhasil_eksperimen\n```\n\n::: {.cell-output-display}\n![Hasil pelemparan secara acak 100 jarum pada selembar kertas](index_files/figure-html/fig-vis-hasil-eksperimen-1.png){#fig-vis-hasil-eksperimen width=672}\n:::\n:::\n\n\nSebelumnya kita telah mengetahui berapa banyak jarum yang memotong garis dan yang tidak. Kita juga dapat mengetaui persentasenya juga. Kedua informasi ini dapat kita visualisasikan, seperti yang disajikan pada @fig-diag-batang-potong!\n\n\n::: {#fig-diag-batang-potong .cell layout-ncol=\"2\"}\n\n```{.r .cell-code}\ndata_eksperimen |> \n  ggplot(aes(x = potong, fill = potong)) + \n  geom_bar() + \n  scale_fill_manual(\n    values = c(\n      \"Memotong\" = \"#4269d0\",\n      \"Tak memotong\" = \"#ff725c\"\n    )\n  ) + \n  theme_minimal() + \n  theme(\n    legend.position = \"none\",\n    axis.title.x = element_blank()\n  ) + \n  labs(\n    y = \"Frekuensi\"\n  )\n\ndata_eksperimen |> \n  mutate(\n    potong = factor(potong, levels = c(\"Tak memotong\", \"Memotong\"))\n  ) |> \n  ggplot(aes(x = 1, fill = potong)) + \n  geom_bar(position = \"fill\") + \n  scale_y_continuous(\n    labels = percent_format(),\n    breaks = seq(from = 0, to = 1, by = .1)\n  ) + \n  scale_fill_manual(\n    values = c(\n      \"Tak memotong\" = \"#ff725c\",\n      \"Memotong\" = \"#4269d0\"\n    ),\n    name = \"Hasil percobaan\",\n    breaks = c(\"Memotong\", \"Tak memotong\")\n  ) + \n  theme_minimal() + \n  theme(\n    legend.position = \"bottom\",\n    axis.title.x = element_blank(),\n    axis.text.x = element_blank()\n  ) + \n  labs(\n    y = \"Frekuensi relatif\"\n  )\n```\n\n::: {.cell-output-display}\n![Frekuensi hasil setiap percobaan: Memotong dan Tak memotong](index_files/figure-html/fig-diag-batang-potong-1.png){#fig-diag-batang-potong-1 width=672}\n:::\n\n::: {.cell-output-display}\n![Frekuensi relatif hasil setiap percobaan](index_files/figure-html/fig-diag-batang-potong-2.png){#fig-diag-batang-potong-2 width=672}\n:::\n\nHasil eksperimen jarum Buffon\n:::\n\n\nBerdasarkan @fig-diag-batang-potong-2, kita dapat mengetahui bahwa peluang empiris jarumnya memotong garis adalah 60% atau 0,6. Bagaimana dengan peluang empirisnya pada percobaan pertama, kedua, ketiga, dan seterusnya sampai ke-100? Untuk itu, kita hitung terlebih dahulu peluang empirisnya untuk setiap percobaannya dengan menggunakan kode pada @lst-peluang-empiris.\n\n\n::: {.cell}\n\n```{#lst-peluang-empiris .r .cell-code  lst-cap=\"Menghitung peluang empiris untuk setiap percobaan\" code-fold=\"false\"}\ndata_eksperimen <- data_eksperimen |> \n  mutate(\n    potong_numerik = if_else(\n      potong == \"Memotong\", 1, 0\n    ),\n    peluang_empiris = cumsum(potong_numerik) / percobaan\n  )\n\nglimpse(data_eksperimen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 100\nColumns: 14\n$ x1              <dbl> 1.909627, 5.978395, 5.874198, 5.987036, 7.887323, 6.12…\n$ y1              <dbl> 1.283654, 5.520609, 3.242062, 2.633571, 2.069911, 3.60…\n$ theta           <dbl> 4.1516438, 3.3197799, 1.9948725, 4.8245782, 3.3068938,…\n$ percobaan       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ x2              <dbl> 1.3778099, 4.9942286, 5.4627189, 6.0989896, 6.9009542,…\n$ y2              <dbl> 0.4367948, 5.3433631, 4.1534815, 1.6398571, 1.9053618,…\n$ warna           <chr> \"#efb118\", \"#ff725c\", \"#6cc5b0\", \"#3ca951\", \"#ff8ab7\",…\n$ yt              <dbl> 0.8602243, 5.4319860, 3.6977718, 2.1367138, 1.9876365,…\n$ theta_l         <dbl> 0.56074517, 1.39260910, 0.42407619, 0.11218922, 1.4054…\n$ h               <dbl> 0.26590870, 0.49208331, 0.20573949, 0.05597701, 0.4931…\n$ d_h             <dbl> 0.13977571, 0.43198600, 0.30222817, 0.13671384, 0.0123…\n$ potong          <chr> \"Memotong\", \"Memotong\", \"Tak memotong\", \"Tak memotong\"…\n$ potong_numerik  <dbl> 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 1, 1, 0, …\n$ peluang_empiris <dbl> 1.0000000, 1.0000000, 0.6666667, 0.5000000, 0.6000000,…\n```\n\n\n:::\n:::\n\n\nSekarang, kita visualisaikan perubahan peluang empirisnya dari satu percobaan ke percobaan lainnya. Perhatikan @fig-tren-peluang-empiris!\n\n\n::: {.cell}\n\n```{#lst-tren-peluang-empiris .r .cell-code  lst-cap=\"Membuat visualisasi tren peluang empiris\" code-fold=\"show\"}\ntren_p_empiris <- data_eksperimen |> \n  ggplot(aes(x = percobaan, y = peluang_empiris)) +\n  geom_line(\n    color = \"gray80\",\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(color = warna)\n  ) + \n  coord_cartesian(\n    ylim = c(0, 1)\n  ) + \n  scale_color_identity() + \n  theme_minimal() + \n  labs(\n    x = \"Percobaan\",\n    y = \"Peluang empiris\"\n  )\n\ntren_p_empiris\n```\n\n::: {.cell-output-display}\n![Tren peluang empiris](index_files/figure-html/fig-tren-peluang-empiris-1.png){#fig-tren-peluang-empiris width=672}\n:::\n:::\n\n\nKita juga dapat memvisualisasikan apakah setiap percobaan dalam eksperimen tersebut menghasilkan jarum yang memotong garis atau tidak dengan menggunakan @eq-kondisi. Caranya, kita representasikan setiap percobaan dalam eksperimen tersebut dengan titik $\\left(\\theta_{l},d_{h}\\right)$. Jika titik tersebut di bawah kurva $y=\\frac{1}{2}\\sin\\left(x\\right)$, percobaannya menghasilkan jarum yang memotong garis. Dengan menggunakan ide seperti ini, kita mendapatkan visualisasi yang disajikan pada @fig-luaran-percobaan-sin.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_kurva_sin <- tibble(\n  x = seq(0, pi / 2, length.out = 400)\n) |> \n  mutate(y = 0.5 * sin(x))\n\nhasil_percobaan <- data_eksperimen |> \n  ggplot(aes(x = theta_l, y = d_h)) +\n  geom_line(\n    data = data_kurva_sin,\n    aes(x = x, y = y),\n    color = \"#efb118\",\n    linewidth = 1,\n    inherit.aes = FALSE\n  ) + \n  geom_point(\n    aes(color = potong),\n    size = 3\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Memotong\" = \"#4269d0\",\n      \"Tak memotong\" = \"#ff725c\"\n    ),\n    name = \"Hasil percobaan\"\n  ) +\n  theme_minimal() + \n  theme(\n    legend.position = \"bottom\"\n  ) + \n  labs(\n    x = expression(theta[l]),\n    y = expression(d[h])\n  )\n\nhasil_percobaan\n```\n\n::: {.cell-output-display}\n![Hasil setiap percobaan dalam eksperimen](index_files/figure-html/fig-luaran-percobaan-sin-1.png){#fig-luaran-percobaan-sin width=672}\n:::\n:::\n\n\n## Membuat Simulasi Menjadi Lebih Hidup {#sec-membuat-simulasi-menjadi-lebih-hidup}\n\nPada @sec-simulasi-masalah-jarum-buffon kita telah memahami masalah jarum Buffon dengan simulasi Monte Carlo dan memvisualisasikan hasil eksperimennya. Kita dapat menjadikan simulasi masalah tersebut menjadi lebih hidup dengan menggunakan animasi. Teknik penggunaan animasi ini juga telah kita bahas pada [pos sebelumnya](/pos/2024-08-animasi-diagram-statistik/index.qmd \"Membuat Diagram Lebih Hidup dengan Animasi\"). Selain itu, kita juga akan menambah banyak percobaannya menjadi $n=1000$ kali.\n\nPertama yang kita lakukan adalah mempersiapkan datanya. Untuk melakukannya, kita menggunakan alur kerja yang serupa dengan yang telah kita lakukan dari @lst-data-eksperimen, @lst-data-eksperimen-lengkap, sampai @lst-peluang-empiris. Kita rangkum alur kerja tersebut untuk membuat fungsi `eksperimen_buffon()` pada @lst-fungsi-data-eksperimen.\n\n\n::: {.cell}\n\n```{#lst-fungsi-data-eksperimen .r .cell-code  lst-cap=\"Membuat data eksperimen pelemparan jarum secara acak\" code-fold=\"false\"}\neksperimen_buffon <- function(n = 100) {\n  set.seed(1234)\n  palet_warna <- c(\n  \"#4269d0\",\"#efb118\",\n  \"#ff725c\",\"#6cc5b0\",\n  \"#3ca951\",\"#ff8ab7\",\n  \"#a463f2\",\"#97bbf5\",\n  \"#9c6b4e\",\"#9498a0\"\n)   \n  tibble(\n    x1 = runif(n, 1, 9),\n    y1 = runif(n, 1, 9),\n    theta = runif(n, 0, 2 * pi),\n    percobaan = 1:n\n  ) |> \n    mutate(\n      x2 = x1 + 1 * cos(theta),\n      y2 = y1 + 1 * sin(theta),\n      warna = palet_warna[(percobaan %% length(palet_warna)) + 1],\n      yt = (y1 + y2) / 2,\n      theta_l = abs(theta %% pi - pi/2),\n      h = 1 / 2 * sin(theta_l),\n      d_h = pmin(\n        abs(yt - floor(yt)),\n        abs(yt - ceiling(yt))\n      ),\n      potong = if_else(\n        h >= d_h, \"Memotong\", \"Tak memotong\"\n      ),\n      potong_numerik = if_else(\n      potong == \"Memotong\", 1, 0\n    ),\n    peluang_empiris = cumsum(potong_numerik) / percobaan\n    )\n}\n```\n:::\n\n\nFungsi `eksperimen_buffon()` dapat kita gunakan untuk membuat data hasil eksperimen masalah jarum Buffon dengan input `n`, yaitu banyaknya percobaan dalam eksperimen tersebut. Dengan demikian, jika kita ingin membuat `data_eksperimen` yang memuat $n=1000$ percobaan, kita manfaatkan fungsi tersebut seperti pada @lst-seribu-percobaan.\n\n\n::: {.cell}\n\n```{#lst-seribu-percobaan .r .cell-code  lst-cap=\"Membuat `data_eksperimen` dengan 1000 percobaan\" code-fold=\"show\"}\ndata_eksperimen <- eksperimen_buffon(1000)\n```\n:::\n\n\nUntuk melihat secara sekilas hasil eksperimen yang dimuat dalam `data_eksperimen` tersebut, kita dapat menggunakan `glimpse()`.\n\n\n::: {.cell}\n\n```{#lst-glimpse-data-eksperimen .r .cell-code  lst-cap=\"Melihat gambaran umum `data_eksperimen`\" code-fold=\"show\"}\nglimpse(data_eksperimen)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,000\nColumns: 14\n$ x1              <dbl> 1.909627, 5.978395, 5.874198, 5.987036, 7.887323, 6.12…\n$ y1              <dbl> 7.701071, 4.899730, 1.882696, 3.810904, 7.088504, 4.11…\n$ theta           <dbl> 0.7165175, 1.2076797, 3.8859660, 3.7640007, 0.3888313,…\n$ percobaan       <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ x2              <dbl> 2.6637247, 6.3335846, 5.1386852, 5.1745586, 8.8126758,…\n$ y2              <dbl> 8.3578339, 5.8345244, 1.2051850, 3.2279108, 7.4676115,…\n$ warna           <chr> \"#efb118\", \"#ff725c\", \"#6cc5b0\", \"#3ca951\", \"#ff8ab7\",…\n$ yt              <dbl> 8.029453, 5.367127, 1.543940, 3.519407, 7.278058, 3.64…\n$ theta_l         <dbl> 0.854278785, 0.363116599, 0.826423019, 0.948388257, 1.…\n$ h               <dbl> 0.3770487226, 0.1775946664, 0.3677563190, 0.4062384624…\n$ d_h             <dbl> 0.02945260, 0.36712720, 0.45605951, 0.48059253, 0.2780…\n$ potong          <chr> \"Memotong\", \"Tak memotong\", \"Tak memotong\", \"Tak memot…\n$ potong_numerik  <dbl> 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, …\n$ peluang_empiris <dbl> 1.0000000, 0.5000000, 0.3333333, 0.2500000, 0.4000000,…\n```\n\n\n:::\n:::\n\n\nBerdasarkan luaran kode dari @lst-glimpse-data-eksperimen, kita dapat melihat bahwa `data_eksperimen` tersebut memiliki 14 variabel, mulai dari `x1`, `y1`, `theta`, sampai `peluang_empiris`. Data tersebut juga memuat 1000 baris yang setiap barisnya merupakan hasil percobaan dalam eksperimen. Dengan demikian, kita mendapatkan `data_eksperimen` yang kita kehendaki.\n\n### Animasi Eksperimen Jarum Buffon {#sec-animasi-eksperimen-jarum-buffon}\n\nData eksperimen 1000 percobaan telah siap. Berikutnya, kita akan membuat visualisasi seperti pada @fig-vis-hasil-eksperimen, tetapi dengan menggunakan animasi. Dalam animasi tersebut, kita buat agar jarumnya tampak jatuh ke kertas secara bergiliran. Kita lakukan hal ini dengan kode pada @lst-animasi-jarum-jatuh.\n\n\n::: {.cell}\n\n```{#lst-animasi-jarum-jatuh .r .cell-code  lst-cap=\"Menganimasikan jarum yang jatuh ke kertas\" code-fold=\"show\"}\nplot_anim_jarum <- data_eksperimen |> \n  ggplot() + \n  geom_hline(\n    yintercept = 0:10,\n    color = \"gray80\",\n    linewidth = 0.5\n  ) + \n  geom_segment(\n    aes(\n      x = x1, y = y1,\n      xend = x2, yend = y2,\n      group = percobaan,\n      color = warna\n    ),\n    linewidth = 1.5\n  ) + \n  coord_equal(\n    xlim = c(0, 10),\n    ylim = c(0, 10)\n  ) + \n  scale_x_continuous(\n    breaks = 0:10\n  ) + \n  scale_y_continuous(\n    breaks = 0:10\n  ) + \n  scale_color_identity() + \n  theme_bw() + \n  theme(\n    legend.position = \"none\",\n    axis.title = element_blank(),\n    panel.grid = element_blank(),\n    plot.margin = unit(c(.5, .5, .5, .5), \"cm\")\n  ) + \n  transition_reveal(along = percobaan)\n```\n:::\n\n\nSekarang kita telah memiliki objek `plot_anim_jarum`. Objek tersebut merupakan objek gganim yang menyajikan animasi eksperimen pelemparan jarum ke kertas. Apabila kita perhatikan kode pada @lst-animasi-jarum-jatuh hampir sama persis dengan kode pada @lst-vis-hasil-eksperimen untuk membuat @fig-vis-hasil-eksperimen. Perbedaannya hanya pada penambahan `group = percobaan` pada pemetaan variabel dalam `geom_segment()` dan `transition_reveal()`.\n\nFungsi `transition_reveal()` merupakan fungsi dari {gganimate} yang digunakan untuk membuat animasi yang menampilkan data secara bertahap berdasarkan urutan sebuah variabel. Agar animasinya memunculkan hasil percobaan 1; 1 dan 2; 1, 2, dan 3; dan seterusnya, kita perlu menambahkan argumen `along = percobaan` untuk membuat animasi tersebut dimunculkan berdasarkan nilai variabel `percobaan`.\n\nSelain itu, kita juga perlu menambahkan `group = percobaan` untuk memberitahu `ggplot()` agar setiap data jarum dalam satu percobaan adalah satu kelompok data sendiri. Hal ini untuk mencegah `ggplot()` agar tidak menyambungkan satu jarum dari suatu percobaan dengan jarum dari percobaan lainnya.\n\nIngin tahu bagaimana animasinya? Untuk mengetahuinya, kita cetak objek `plot_anim_jarum`. Hasilnya disajikan pada @fig-animasi-jarum-jatuh.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_anim_jarum\n```\n\n::: {.cell-output-display}\n![Animasi yang mengilustrasikan eksperimen masalah jarum Buffon yang memuat 1000 percobaan](index_files/figure-html/fig-animasi-jarum-jatuh-1.gif){#fig-animasi-jarum-jatuh}\n:::\n:::\n\n\n*Voilà!* Kita telah berhasil menganimasikan eksperimen 1000 percobaan jarum Buffon.\n\n### Animasi Peluang Empiris {#sec-animasi-peluang-empiris}\n\nKita dapat menganimasikan bagaimana perubahan peluang empiris eksperimen jarum Buffon, dari satu percobaan ke percobaan lainnya. Dengan kata lain, kita akan menganimasikan @fig-tren-peluang-empiris.\n\nSebelum itu, kita perlu mengetahui bahwa peluang empiris untuk mendapatkan jarum yang memotong garis pada kertas akan mendekati peluang teoretisnya. Peluang teoretis ini adalah $\\frac{2}{\\pi}$, atau bernilai sekitar 0,637. Kita dapat menambahkan informasi ini ke dalam animasi yang akan kita buat.\n\nUntuk melakukannya, kita tambahkan garis horizontal $y=\\frac{2}{\\pi}$ bersama dengan `transition_reveal(along = percobaan)` terhadap kode yang membuat @fig-tren-peluang-empiris, yaitu @lst-tren-peluang-empiris. Dengan demikian, kode untuk membuat animasi tersebut ditunjukkan pada @lst-anim-tren-p-empiris.\n\n\n::: {.cell}\n\n```{#lst-anim-tren-p-empiris .r .cell-code  lst-cap=\"Membuat animasi tren peluang empiris\" code-fold=\"show\"}\nplot_anim_p_empiris <- data_eksperimen |> \n  ggplot(aes(x = percobaan, y = peluang_empiris)) + \n  geom_hline(\n    yintercept = 2 / pi,\n    linetype = \"dashed\",\n    color = \"gray50\"\n  ) + \n  geom_line(\n    color = \"gray80\",\n    linewidth = 1\n  ) + \n  geom_point(\n    aes(color = warna, group = percobaan)\n  ) + \n  coord_cartesian(\n    ylim = c(0, 1)\n  ) + \n  scale_color_identity() + \n  theme_minimal() + \n  labs(\n    x = \"Percobaan\",\n    y = \"Peluang empiris\"\n  ) + \n  transition_reveal(\n    along = percobaan\n  )\n```\n:::\n\n\nKita telah membuat objek gganim `plot_anim_p_empiris`. Bagaimana animasi yang terbentuk? Perhatikan @fig-anim-p-empiris!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_anim_p_empiris\n```\n\n::: {.cell-output-display}\n![Ilustrasi perubahan peluang empiris dari satu percobaan ke percobaan berikutnya](index_files/figure-html/fig-anim-p-empiris-1.gif){#fig-anim-p-empiris}\n:::\n:::\n\n\n### Animasi Hasil Setiap Percobaan {#sec-animasi-hasil-setiap-percobaan}\n\nHasil setiap percobaan dalam eksperimen jarum Buffon juga dapat kita animasikan. Hal ini serupa dengan @fig-luaran-percobaan-sin. Dengan cara yang serupa dengan pembuatan animasi-animasi sebelumnya, kita dapat melakukannya dengan kode pada @lst-anim-hasil-percobaan.\n\n\n::: {.cell}\n\n```{#lst-anim-hasil-percobaan .r .cell-code  lst-cap=\"Membuat animasi hasil setiap percobaan\" code-fold=\"show\"}\nplot_anim_hasil_percobaan <- data_eksperimen |> \n  ggplot(aes(x = theta_l, y = d_h)) +\n  geom_line(\n    data = data_kurva_sin,\n    aes(x = x, y = y),\n    color = \"#efb118\",\n    linewidth = 1,\n    inherit.aes = FALSE\n  ) + \n  geom_point(\n    aes(\n      color = potong,\n      group = percobaan\n    ),\n    size = 3\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Memotong\" = \"#4269d0\",\n      \"Tak memotong\" = \"#ff725c\"\n    ),\n    name = \"Hasil percobaan\"\n  ) +\n  theme_minimal() + \n  theme(\n    legend.position = \"bottom\"\n  ) + \n  labs(\n    x = expression(theta[l]),\n    y = expression(d[h])\n  ) + \n  transition_reveal(\n    along = percobaan\n  )\n```\n:::\n\n\nUntuk melihat hasilnya, kita dapat mencetak objek gganim `plot_anim_hasil_percobaan` yang dihasilkan pada @lst-anim-hasil-percobaan. Hasil animasinya disajikan pada @fig-anim-hasil-percobaan.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_anim_hasil_percobaan\n```\n\n::: {.cell-output-display}\n![Animasi hasil setiap percobaan dalam eksperimen jarum Buffon](index_files/figure-html/fig-anim-hasil-percobaan-1.gif){#fig-anim-hasil-percobaan}\n:::\n:::\n\n\n### Gabungan Animasi {#sec-gabungan-animasi}\n\nSeringkali gabungan animasi memberikan informasi yang lebih kaya daripada animasi tunggal. Misalnya, bagaimana menurutmu jika kita dapat mengatur agar animasi pada @fig-animasi-jarum-jatuh dan @fig-anim-p-empiris berdampingan? Selain kita dapat melihat eksperimen jarum Buffon, secara simultan kita juga dapat mengamati tren peluang empirisnya. Itulah yang akan kita lakukan. Untuk melakukannya, kita dapat menggunakan kode pada @lst-gif-buffon-p-empiris.\n\n::: {#lst-gif-buffon-p-empiris}\n``` r\ngif_anim_jarum <- animate(\n  plot_anim_jarum,\n  width = 240,\n  height = 240,\n  nframes = 200,\n  fps = 10\n)\n\ngif_anim_p_empiris <- animate(\n  plot_anim_p_empiris,\n  width = 240,\n  height = 240,\n  nframes = 200,\n  fps = 10\n)\n\nmgif_anim_jarum <- image_read(gif_anim_jarum)\nmgif_anim_p_empiris <- image_read(gif_anim_p_empiris)\n\ngif_buffon_p_empiris <- image_append(\n  c(mgif_anim_jarum[1], mgif_anim_p_empiris[1])\n)\nfor(i in 2:200){\n  kombinasi <- image_append(\n    c(mgif_anim_jarum[i], mgif_anim_p_empiris[i])\n  )\n  gif_buffon_p_empiris <- c(\n    gif_buffon_p_empiris,\n    kombinasi\n  )\n}\n\nanim_save(\n  filename = \"gif_buffon_p_empiris.gif\",\n  animation = gif_buffon_p_empiris\n)\n```\n\nMenyandingkan animasi eksperimen jarum Buffon dan peluang empirisnya\n:::\n\nKode pada @lst-gif-buffon-p-empiris menghasilkan animasi yang berupa gambar gif. Animasi tersebut ditunjukkan pada @fig-gif-buffon-p-empiris.\n\n![Ilustrasi eksperimen jarum Buffon dan peluang empirisnya](aset/gif_buffon_p_empiris.gif){#fig-gif-buffon-p-empiris}\n\nDengan cara yang serupa, kita juga dapat menyandingkan animasi yang disajikan pada @fig-animasi-jarum-jatuh dan @fig-anim-hasil-percobaan. Animasi tersebut ditunjukkan pada @fig-gif-buffon-hasil-percobaan.\n\n![Ilustrasi eksperimen jarum Buffon dan hasil setiap percobaannya](aset/gif_buffon_hasil_percobaan.gif){#fig-gif-buffon-hasil-percobaan}\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}