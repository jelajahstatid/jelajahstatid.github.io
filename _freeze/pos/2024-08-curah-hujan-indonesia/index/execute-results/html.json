{
  "hash": "0ef82e094408c84b7faa8ec61b59969b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Indonesia Negara Dua Musim\"\nsubtitle: \"Bagaimana Curah Hujannya?\"\ndescription: \"Indonesia memiliki dua musim, yaitu musim kemarau dan penghujan. Kedua musim ini terjadi pada periode waktu tertentu. Bagaimana sebaran curah hujan dalam periode tersebut? Bagaimana sebarannya pada wilayah-wilayah di Indonesia?\"\nauthor:\n  - name: Yosep Dwi Kristanto\n    url: https://people.usd.ac.id/~ydkristanto/\n    affiliation: Pendidikan Matematika, Universitas Sanata Dharma, Yogyakarta\n    affiliation-url: https://www.usd.ac.id/s1pmat\n    orcid: 0000-0003-1446-0422\ndate: 2024-08-24\ncategories:\n  - Geostatistika\n  - matematika membumi\n  - tutorial\n  - visualisasi data\nimage: \"curah_hujan_indonesia_fitur.png\"\nimage-alt: |\n  Peta 3D yang menunjukkan sebaran rerata curah hujan di tiap-tiap wilayah di Indonesia.\nkeywords: \n  - Indonesia\n  - curah hujan\n  - presipitasi\n  - peta\n  - diagram kotak\n  - diagram garis\nlightbox: true\ncopyright: \"Â© 2024 Yosep Dwi Kristanto\"\nlicense: \"CC BY\"\ncode-annotations: select\neditor_options: \n  chunk_output_type: console\n---\n\n*November Rain* merupakan satu dari banyak lagu yang akrab di telingaku. Tak hanya itu, lagu ini juga biasanya aku gunakan sebagai pengingat waktu. November biasanya menjadi awal musim penghujan. Musim penghujan tersebut pada umumnya terjadi pada bulan November hingga Maret karena adanya angin muson barat yang membawa banyak uap air ke sebagian besar wilayah Indonesia.\n\nMusim kemarau biasanya terjadi pada bulan Mei hingga September. Hal ini dikarenakan adanya angin muson timur yang sifatnya kering dan berhembus ke sebagian besar wilayah Indonesia. Meskipun demikian, pola musim penghujan dan kemarau tersebut dapat berbeda karena banyak hal, misalnya adalah posisi wilayahnya dan adanya pengaruh angin lokal.\n\nUntuk itu, melalui artikel ini aku mengajak pembaca untuk melihat dan menganalisis curah hujan di Indonesia. Nanti kita akan menganalisis curah hujan di Indonesia berdasarkan waktu dan posisi geografisnya dengan menggunakan [R](https://www.R-project.org/ \"R: A Language and Environment for Statistical Computing\"){.external target=\"_blank\"}. Untuk mengawalinya, kita perlu memanggil beberapa paket yang diperlukan.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(pRecipe)\nlibrary(giscoR)\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(rayshader)\nlibrary(sf)\n```\n:::\n\n\nPaket [{pRecipe}](https://CRAN.R-project.org/package=pRecipe \"pRecipe: Precipitation R Recipes\"){.external target=\"_blank\"} akan kita gunakan untuk mengunduh dan mengimpor data presipitasi atau curah hujan. Paket [{giscoR}](https://doi.org/10.32614/CRAN.package.giscoR \"giscoR: Download Map Data from GISCO API - Eurostat\"){.external target=\"_blank\"} kita pakai untuk mengunduh data dari [pangkalan data Eurostat GISCO (*Geographic Information System of the Commission*)](https://ec.europa.eu/eurostat/web/gisco){.external target=\"_blank\"}. Secara khusus, kita menggunakan paket ini untuk mendapatkan data peta Indonesia. Kita gunakan paket [{terra}](https://CRAN.R-project.org/package=terra \"terra: Spatial Data Analysis\"){.external target=\"_blank\"} untuk melakukan analisis data spasial. Seperti biasa, paket [{tidyverse}](https://www.tidyverse.org/ \"R packages for data science\"){.external target=\"_blank\"} kita gunakan untuk menganalisis dan memvisualisasikan data. Paket [{rayshader}](https://CRAN.R-project.org/package=rayshader \"rayshader: Create Maps and Visualize Data in 2D and 3D\"){.external target=\"_blank\"} dapat membantu kita dalam pembuatan peta dan visualisasi data dalam 2D dan 3D. Terakhir, paket [{sf}](https://cran.r-project.org/package=sf \"sf: Simple Features for R\"){.external target=\"_blank\"} memungkinkan kita untuk mengolah data spasial yang berupa vektor.\n\n## Mempersiapkan Data {#sec-mempersiapkan-data}\n\nData yang perlu kita miliki adalah data curah hujan. Data tersebut dapat kita peroleh dengan menggunakan fungsi `download_data()` dari {pRecipe}.\n\n``` r\ndownload_data(\n  dataset = \"mswep\",\n  path = getwd(),\n  domain = \"raw\",\n  timestep = \"monthly\"\n)\n```\n\nAda empat argumen yang kita inputkan dalam fungsi `download_data()` di atas. Argumen `dataset = \"mswep\"` mengindikasikan bahwa set data yang kita unduh adalah data [MSWEP (*Multi-Source Weighted-Ensemble Precipitation*)](https://doi.org/10.5194/hess-23-207-2019 \"Daily evaluation of 26 precipitation datasets using Stage-IV gauge-radar data for the CONUS\"){.external target=\"_blank\"}. Argumen `path = getwd()` menunjukkan tempat penyimpanan hasil unduhannya. `getwd()` mengindikasikan bahwa tempat penyimpanannya adalah folder kerja kita. Argumen `domain = \"raw\"` menunjukkan domain set data yang kita inginkan. Nilai domain tersebut juga dapat diisi dengan \"global\", \"land\", atau \"ocean\". Terakhir, `timestep = \"monthly\"` menerangkan bahwa set data yang kita inginkan memiliki interval waktu bulanan.\n\nSetelah kita jalankan kode di atas, kita mendapatkan sebuah fail dengan nama \"mswep_tp_mm_global_197902_202301_025_monthly.nc\". Fail tersebut berisi data curah hujan untuk semua wilayah di dunia. Padahal, kita hanya memerlukan data untuk Indonesia saja. Oleh karena itu, kita perlu memotong data tersebut. Untuk melakukan hal ini, kita memerlukan poligon wilayah Indonesia. Bagaimana mendapatkannya? Kita dapat memerolehnya dengan menggunakan fungsi `gisco_get_countries()` dari paket {giscoR}.\n\n``` r\nsf_negara <- gisco_get_countries(\n  country = \"ID\",\n  resolution = 1\n)\n```\n\nSekarang kita buat sebuah SpatRaster dari fail \"mswep_tp_mm_global_197902_202301_025_monthly.nc\" dengan menggunakan fungsi `rast()` dari {terra}. Setelah itu, kita potong hasilnya dengan `sf_negara` menggunakan fungsi `crop()` dari {terra}. Kita namai hasilnya sebagai `data_mswep`.\n\n``` r\ndata_mswep <- rast(\n  \"mswep_tp_mm_global_197902_202301_025_monthly.nc\"\n) |> \n  crop(\n    sf_negara\n  )\n```\n\nJika kita menjalankan perintah `print(data_mswep)`, kita mengetahui bahwa objek `data_mswep` tersebut memiliki 68 baris, 184 kolom, dan 528 lapisan/layer. Baris dan kolom tersebut menyatakan koordinat $x$ dan $y$ wilayah Indonesia sedangkan lapisannya merupakan nilai-nilai variabel `precipitation` atau curah hujan di tiap-tiap koordinat tersebut. Banyaknya lapisan adalah 528 karena nilai `precipitation` untuk setiap koordinat wilayahnya merentang dari 1979-02-01 sampai 2023-01-01 (528 bulan).\n\nPada bagian `names`, kita dapat melihat nama-nama variabelnya adalah `precipitation_1`, `precipitation_2`, `precipitation_3`, dan seterusnya sampai `precipitation_528`. Nama-nama ini kurang informatif. Karena nama-nama itu merepresentasikan curah hujan dari 1979-02-01 sampai 2023-01-01, kita dapat menggantinya dengan barisan tanggal itu.\n\n``` r\nbarisan_tanggal <- as.character(\n  seq(as.Date(\"1979-02-01\"), as.Date(\"2023-01-01\"), by = \"month\")\n)\n\nnames(data_mswep) <- barisan_tanggal\n```\n\nAgar memudahkan kita dalam mengolah data, kita ubah objek `data_mswep` menjadi sebuah [data frame](https://people.usd.ac.id/~ydkristanto/index.php/seri-belajar-statistika-dan-ilmu-data-dengan-r/pengantar-r/6/ \"Data Frame -- Pengantar Pemrograman R\"){.external target=\"_blank\"}. Untuk melakukannya, kita dapat menggunakan fungsi `as.data.frame()` dari paket {terra}. Kita inputkan `xy = TRUE` ke dalam fungsi tersebut agar mempertahankan koordinat $x$ dan $y$. Setelah itu, kita juga dapat mengubah hasilnya menjadi sebuah tibble dengan fungsi `as_tibble()` agar mudah terbaca. Kita namai hasilnya dengan `df_mswep`.\n\n``` r\ndf_mswep <- data_mswep |>\n  as.data.frame(xy = TRUE) |> \n  as_tibble()\n```\n\nJika kita lihat hasilnya dengan `print(df_mswep)`, ternyata `df_mswep` memiliki 12.512 baris dan 530 kolom! Kita buat data tersebut menjadi data yang memanjang dengan fungsi `pivot_longer()`. Kolom-kolom yang kita putar adalah semua kolom kecuali kolom `x` dan `y` sehingga kita inputkan argumen `cols = !c(\"x\", \"y\")`. Kita namai variabel yang memuat kolom-kolom dari data sebelumnya dengan `tanggal_bawah` dan kita namai variabel yang berisi nilai-nilainya dengan `curah_hujan`. Agar nilai-nilai dalam variabel `tanggal_bawah` memiliki kelas date, kita modifikasi variabel ini dengan `mutate()` dan `as.Date()`. Untuk melihat hasilnya, kita dapat memanggil fungsi `print()` terhadap `df_mswep`.\n\n``` r\ndf_mswep <- df_mswep |> \n  pivot_longer(\n    !c(\"x\", \"y\"),\n    names_to = \"tanggal_bawah\",\n    values_to = \"curah_hujan\"\n  ) |> \n  mutate(\n    tanggal_bawah = as.Date(tanggal_bawah)\n  )\n```\n\nData `df_mswep` telah rapi. Data tersebut memuat 6.606.336 baris dan 4 variabel/kolom. Keempat variabel tersebut adalah `x`, `y`, `tanggal_bawah`, dan `curah_hujan`. Data ini telah siap untuk kita eksplorasi pada bagian berikutnya.\n\n::: callout-note\n## Catatan\n\n@sec-mempersiapkan-data di atas menghasilkan `sf_negara`, `data_mswep`, dan `df_mswep`. Ketiga data tersebut sudah aku siapkan di awan. Untuk itu, kamu dapat memuatnya langsung ke lembar kerja R dengan kode berikut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nload(url(\"https://github.com/jelajahstatid/jelajahstatid.github.io/raw/main/pos/2024-08-curah-hujan-indonesia/aset/data_curah_hujan_id.RData\"))\n```\n:::\n\n:::\n\n## Menjelajah Data {#sec-menjelajah-data}\n\nData yang telah kita peroleh pada bagian @sec-mempersiapkan-data dapat kita gunakan untuk melihat tren rerata curah hujan per bulannya, mulai Februari 1979 sampai Januari 2023. Untuk melakukannya, kita perlu mengelompokkan baris-baris dalam `df_mswep` berdasarkan nilai dalam variabel `tanggal_bawah`. Pengelompokkan ini dapat kita lakukan dengan menggunakan fungsi `group_by()`. Setelah itu, kita hitung rerata `curah_hujan` pada setiap kelompoknya dengan menggunakan fungsi `summarise()`.\n\nHasil pada proses sebelumnya kemudian dapat gunakan untuk membuat diagram garis. Perhatikan @fig-tren-curah-hujan-setiap-bulan!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf_mswep |> \n  group_by(tanggal_bawah) |> \n  summarise(\n    rerata_curah_hujan = mean(curah_hujan, na.rm = TRUE),\n    .groups = \"drop\"\n  ) |> \n  ggplot(\n    aes(x = tanggal_bawah, y = rerata_curah_hujan)\n  ) + \n  geom_line() + \n  theme_minimal() + \n  labs(\n    x = \"Waktu\",\n    y = \"Rerata curah hujan (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![Tren rerata curah hujan di Indonesia setiap bulannya mulai Februari 1979 sampai Januari 2023](index_files/figure-html/fig-tren-curah-hujan-setiap-bulan-1.png){#fig-tren-curah-hujan-setiap-bulan width=672}\n:::\n:::\n\n\nApakah kita dapat membandingkan rerata curah hujan setiap bulannya? Pertanyaan ini dapat kita jawab dengan membandingkan distribusi curah hujan untuk bulan Januari sampai Desember. Hal ini dapat kita lakukan dengan diagram kotak. Perhatikan @fig-rerata-curah-hujan-per-bulan!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nvek_nama_bulan <- c(\"Januari\", \"Februari\", \"Maret\", \"April\", \"Mei\", \"Juni\", \"Juli\", \"Agustus\", \"September\", \"Oktober\", \"November\", \"Desember\")\n\ndf_mswep |> \n  mutate(\n    bulan = month(tanggal_bawah),\n    nama_bulan = vek_nama_bulan[month(tanggal_bawah)]\n  ) |> \n  ggplot(\n    aes(x = fct_reorder(nama_bulan, bulan), y = curah_hujan)\n  ) + \n  geom_boxplot(outliers = FALSE) + \n  theme_minimal() + \n  labs(\n    x = \"Bulan\",\n    y = \"Curah hujan (mm)\"\n  )\n```\n\n::: {.cell-output-display}\n![Perbandingan rerata curah hujan setiap bulannya](index_files/figure-html/fig-rerata-curah-hujan-per-bulan-1.png){#fig-rerata-curah-hujan-per-bulan width=672}\n:::\n:::\n\n\nBerdasarkan @fig-rerata-curah-hujan-per-bulan, kita dapat melihat bahwa bulan Januari dan Desember memiliki nilai tengah (median) curah hujan yang paling tinggi dibandingkan dengan bulan-bulan lainnya. Sebaliknya, bulan Agustus dan September memiliki curah hujan yang relatif lebih rendah dibandingkan dengan yang lain.\n\nPada @sec-menjelajah-data ini kita telah menjelajah data curah hujan di Indonesia. Melalui penjelajahan tersebut, kita telah melihat tren rerata curah hujan di Indonesia dari waktu ke waktu. Selain itu, kita juga telah dapat membandingkan rerata curah hujan setiap bulannya. Meskipun demikian, dalam penjelajahan tersebut kita belum mempertimbangkan perbedaan curah hujan antara satu wilayah dengan wilayah lainnya. Kita belum memanfaatkan variabel `x` dan `y` dalam data `df_mswep`.\n\n## Visualisasi Data dengan Peta 2D {#sec-visualisasi-data-dengan-peta-2d}\n\nCurah hujan tergantung dari wilayahnya. Suatu wilayah dapat memiliki curah hujan yang relatif lebih tinggi dibandingkan wilayah lainnya. Demikian juga sebaliknya. Untuk itu, kita perlu melakukan visualisasi data yang berbeda dari apa yang kita lakukan pada @sec-menjelajah-data. Kita akan memanfaatkan peta.\n\nPeta pertama yang kita buat adalah peta yang menunjukkan rerata curah hujan di setiap wilayah Indonesia empat tahun terakhir, yaitu tahun 2019 â 2022. (Data pada tahun 2023 kita abaikan karena hanya memuat data bulan Januari.) Untuk itu, kita siapkan terlebih dahulu datanya. Data tersebut kita beri nama `df_mswep_19_22`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Data curah hujan tahunan\ndf_mswep_tahunan <- df_mswep |> \n  filter(\n    tanggal_bawah >= as.Date(\"1980-01-01\"),\n    tanggal_bawah <= as.Date(\"2022-12-01\")\n  ) |> \n  mutate(tahun = year(tanggal_bawah)) |> \n  group_by(x, y, tahun) |> \n  summarise(\n    curah_hujan_tahunan = sum(curah_hujan, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Data curah hujan tahunan pada tahun 2019 -- 2022\ndf_mswep_19_22 <- df_mswep_tahunan |> \n  filter(\n    tahun %in% c(2019, 2020, 2021, 2022)\n  )\n\nprint(df_mswep_19_22)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 50,048 Ã 4\n       x     y tahun curah_hujan_tahunan\n   <dbl> <dbl> <dbl>               <dbl>\n 1  95.1 -10.9  2019               1056.\n 2  95.1 -10.9  2020               1966.\n 3  95.1 -10.9  2021               3029.\n 4  95.1 -10.9  2022               2868.\n 5  95.1 -10.6  2019               1071.\n 6  95.1 -10.6  2020               2034.\n 7  95.1 -10.6  2021               2997.\n 8  95.1 -10.6  2022               3136.\n 9  95.1 -10.4  2019               1029.\n10  95.1 -10.4  2020               2097.\n# â¹ 50,038 more rows\n```\n\n\n:::\n:::\n\n\nKita gunakan `df_mswep_19_22` untuk membuat peta. Terdapat tiga fungsi utama yang perlu kita gunakan:\n\n-   `geom_raster()` untuk memplot kotak-kotak yang warnanya mengikuti nilai rerata curah hujan di setiap koordinat kotak-kotak tersebut;\n\n-   `geom_contour()` untuk memvisualisasikan kontur (garis bentuk); dan\n\n-   `geom_sf()` untuk memvisualisasikan objek-objek sf (misalnya titik, garis, atau poligon).\n\nPeta pertama kita dapat dibuat dengan menggunakan baris kode seperti berikut. Hasilnya ditunjukkan pada @fig-peta-per-tahun.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf_mswep_19_22 |> \n  ggplot() + \n  geom_raster(\n    aes(\n      x = x,\n      y = y,\n      fill = curah_hujan_tahunan\n    )\n  ) +\n  geom_contour(\n    aes(\n      x = x,\n      y = y,\n      z = curah_hujan_tahunan\n    ),\n    color = \"white\"\n  ) +\n  geom_sf(\n    data = sf_negara,\n    fill = \"transparent\",\n    color = \"grey10\",\n    size = .5\n  ) +\n  facet_wrap(vars(tahun), ncol = 2) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Rerata curah hujan di setiap wilayah Indonesia per tahunnya](index_files/figure-html/fig-peta-per-tahun-1.png){#fig-peta-per-tahun width=672}\n:::\n:::\n\n\nKita dapat memperbaiki tampilan pada @fig-peta-per-tahun. Perbaikan tersebut dapat kita lakukan pada tema, interval, dan warnanya. Kita siapkan ketiga hal tersebut.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ntema_peta <- function(){\n  theme_minimal() +\n    theme(\n      axis.line = element_blank(),\n      axis.title.x = element_blank(),\n      axis.title.y = element_blank(),\n      axis.text.x = element_blank(),\n      axis.text.y = element_blank(),\n      legend.position = \"bottom\",\n      panel.grid.major = element_line(\n        color = NA\n      ),\n      panel.grid.minor = element_line(\n        color = NA\n      ),\n      plot.background = element_rect(\n        fill = NA, color = NA\n      ),\n      legend.background = element_rect(\n        fill = \"white\", color = NA\n      ),\n      panel.border = element_rect(\n        fill = NA, color = NA\n      ),\n      plot.margin = unit(\n        c(\n          t = 0, r = 0,\n          b = 0, l = 0\n        ), \"lines\"\n      )\n    )\n}\n\nwarna <- hcl.colors(\n  n = 5,\n  palette = \"Temps\",\n  rev = TRUE\n)\n\n# Curah hujan bulanan (mm per bulan)\nbatas_int_bulanan <- c(0, 100, 300, 400, ceiling(max(df_mswep$curah_hujan)))\n\nbatas_int_bulanan_baku <- (batas_int_bulanan - min(batas_int_bulanan)) / (max(batas_int_bulanan) - min(batas_int_bulanan))\n\n# Curah hujan tahunan (mm per tahun)\nbatas_int_tahunan <- c(0, 1500, 3000, 4500, ceiling(max(df_mswep_tahunan$curah_hujan_tahunan)))\n\nbatas_int_tahunan_baku <- (batas_int_tahunan - min(batas_int_tahunan)) / (max(batas_int_tahunan) - min(batas_int_tahunan))\n```\n:::\n\n\nSebagai catatan, interval pada baris kode di atas memiliki batas-batas `batas_int_tahunan` dan `batas_int_bulanan`. Batas-batas interval bulanan maupun tahunan tersebut dibuat dengan berdasarkan kategori curah hujan [BMKG](https://bmkg.go.id/iklim/prakiraan-musim.bmkg \"Prakiraan Musim BMKG\"){.external target=\"_blank\"}.\n\nSekarang, kita terapkan tema, interval, dan warna yang sudah kita siapkan untuk membuat peta. Hasilnya disajikan pada @fig-peta-per-tahun-modif.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf_mswep_19_22 |> \n  ggplot() + \n  geom_raster(\n    aes(\n      x = x,\n      y = y,\n      fill = curah_hujan_tahunan\n    )\n  ) +\n  geom_contour(\n    aes(\n      x = x,\n      y = y,\n      z = curah_hujan_tahunan\n    ),\n    color = \"white\",\n    linewidth = .25\n  ) +\n  geom_sf(\n    data = sf_negara,\n    fill = \"transparent\",\n    color = \"grey10\",\n    linewidth = .5\n  ) + \n  scale_fill_gradientn(\n    name = \"Curah hujan\\n(mm/tahun)\",\n    colors = warna,\n    values = batas_int_tahunan_baku,\n    breaks = c(0, 1500, 3000, 4500),\n    labels = c(0, 1500, 3000, 4500)\n  ) + \n  facet_wrap(vars(tahun), ncol = 2) +\n  tema_peta()\n```\n\n::: {.cell-output-display}\n![Rerata curah hujan di setiap wilayah Indonesia per tahunnya](index_files/figure-html/fig-peta-per-tahun-modif-1.png){#fig-peta-per-tahun-modif width=672}\n:::\n:::\n\n\nBerdasarkan peta pada @fig-peta-per-tahun-modif, kita dapat melihat bahwa tahun 2019 curah hujannya relatif lebih rendah dibandingkan dengan tahun 2020 â 2022. Tak hanya itu, kita juga dapat membandingkan curah hujan antarwilayah di Indonesia. Tampak bahwa wilayah pesisir barat Pulau Sumatera, Kalimantan bagian utara, dan Papua bagian timur memiliki curah hujan yang relatif lebih tinggi.\n\nSekarang kita akan membuat sebuah peta curah hujan di Indonesia pada bulan dan tahun tertentu. Apakah kamu punya usulan bulan dan tahun berapa yang perlu kita gambar? Kita pilih bulan dan tahun yang terakhir saja, yaitu Januari 2023. Perhatikan @fig-peta-bulan-terakhir!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\npeta_2023_01 <- df_mswep |> \n  filter(\n    tanggal_bawah == as.Date(\"2023-01-01\")\n  ) |> \n  ggplot() + \n  geom_raster(\n    aes(\n      x = x,\n      y = y,\n      fill = curah_hujan\n    )\n  ) +\n  geom_contour(\n    aes(\n      x = x,\n      y = y,\n      z = curah_hujan \n    ),\n    breaks = c(0, 100, 300, 400),\n    color = \"white\",\n    linewidth = .25\n  ) +\n  geom_sf(\n    data = sf_negara,\n    fill = \"transparent\",\n    color = \"grey10\",\n    linewidth = .5\n  ) + \n  scale_fill_gradientn(\n    name = \"Curah hujan\\n(mm/bulan)\",\n    colors = warna,\n    values = batas_int_bulanan_baku,\n    breaks = c(0, 100, 300, 400),\n    labels = c(0, 100, 300, 400)\n  ) + \n  tema_peta()\n\nprint(peta_2023_01)\n```\n\n::: {.cell-output-display}\n![Curah hujan di setiap wilayah Indonesia pada Januari 2023](index_files/figure-html/fig-peta-bulan-terakhir-1.png){#fig-peta-bulan-terakhir width=672}\n:::\n:::\n\n\nBerdasarkan @fig-peta-bulan-terakhir, kita dapat melihat bahwa sebagian besar wilayah Indonesia memiliki curah hujan yang cukup tinggi. Beberapa wilayah saja yang curah hujannya relatif rendah, yaitu sebagian wilayah Sulawesi, bagian selatan Kepulauan Maluku, dan wilayah Nusa Tenggara. Untuk lebih jelasnya, kita dapat melihat distribusi curah hujannya pada Januari 2023, seperti yang ditunjukkan pada @fig-distribusi-curah-hujan-jan-2023!\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ndf_mswep |> \n  filter(\n    tanggal_bawah == as.Date(\"2023-01-01\")\n  ) |> \n  ggplot(aes(x = curah_hujan)) + \n  geom_density() + \n  theme_minimal() + \n  theme(\n    axis.title.y = element_blank(),\n    axis.text.y = element_blank()\n  ) + \n  labs(\n    x = \"Curah hujan (mm/bulan)\"\n  )\n```\n\n::: {.cell-output-display}\n![Distribusi curah hujan di setiap wilayah Indonesia pada Januari 2023](index_files/figure-html/fig-distribusi-curah-hujan-jan-2023-1.png){#fig-distribusi-curah-hujan-jan-2023 width=672}\n:::\n:::\n\n\n## Visualisasi Data dengan Peta 3D {#sec-visualisasi-data-dengan-peta-3d}\n\nPeta yang kita hasilkan pada @sec-visualisasi-data-dengan-peta-2d merupakan peta 2D meskipun terbantu oleh kontur sehingga tampak seperti 3D. Apakah kita dapat membuat peta 3D? Ya, kita dapat melakukannya dengan menggunakan paket {rayshader}.\n\nUntuk membuat peta 3D dari `peta_2023_01` yang telah kita buat sebelumnya, kita gunakan baris kode berikut.\n\n``` r\nplot_gg(\n  ggobj = peta_2023_01,\n  width = 7,\n  height = 7,\n  scale = 250,\n  solid = FALSE,\n  shadow = TRUE,\n  shadowcolor = \"white\",\n  shadowwidth = 0,\n  shadow_intensity = 1,\n  zoom = .7,\n  phi = 85,\n  theta = 0\n)\n```\n\nFungsi `plot_gg()` tersebut gunanya untuk menjadikan objek `peta_2023_01` menjadi 3D dengan memetakan warnanya sebagai ketinggian dalam gambar 3D tersebut. Setelah baris perintah di atas dijalankan, dalam beberapa saat kita akan mendapatkan jendela baru yang muncul. Jendela tersebut seperti yang ditunjukkan pada @fig-jendela-kamera.\n\n![Jendela kamera dari peta 3D](aset/jendela-kamera.png){#fig-jendela-kamera fig-alt=\"Jendela kamera dari peta 3D\" fig-align=\"center\"}\n\nKetika jendela kamera tersebut masih muncul, kita dapat mengatur posisi dan propertinya dengan menggunakan fungsi `render_camera()`. Kita dapat mengaturnya seperti pada baris kode berikut.\n\n``` r\nrender_camera(\n  theta = 30,\n  phi = 75\n)\n```\n\nArgumen `theta = 30` menyatakan bahwa sudut rotasinya adalah 30 derajat. Argumen `phi = 75` menyatakan bahwa sudut azimutnya sebesar 75 derajat. Setelah itu, kita dapat merender peta 3D tersebut dengan menggunakan baris kode sebagai berikut.\n\n``` r\nu <- \"https://dl.polyhaven.org/file/ph-assets/HDRIs/hdr/4k/air_museum_playground_4k.hdr\"\n\nfail_hdri <- basename(u)\n\ndownload.file(\n  url = u,\n  destfile = fail_hdri,\n  mode = \"wb\"\n)\n\nrender_highquality(\n  filename = \"curah_hujan_indonesia.png\",\n  preview = TRUE,\n  interactive = FALSE,\n  parallel = TRUE,\n  light = TRUE,\n  environment_light = fail_hdri,\n  intensity = .45,\n  rotate_env = 90,\n  width = 1280,\n  height = 720\n)\n```\n\nHasil render tersebut ditunjukkan pada @fig-peta-3d-curah-hujan-indonesia-2023-01.\n\n![Curah hujan Indonesia pada Januari 2023](aset/curah_hujan_indonesia.png){#fig-peta-3d-curah-hujan-indonesia-2023-01 fig-alt=\"Peta 3D yang menyajikan curah hujan Indonesia pada Januari 2023\" fig-align=\"center\"}\n\n## Catatan Akhir {#sec-catatan-akhir}\n\nKita telah menganalisis curah hujan di Indonesia dari waktu ke waktu. Secara lebih spesifik, kita telah melihat bulan-bulan apa saja yang curah hujannya relatif lebih tinggi. Selain itu, kita juga telah melihat bagaimana peta, baik 2D maupun 3D, dapat kita gunakan untuk memvisualisasikan data curah hujan dari berbagai wilayah Indonesia. Dengan cara ini, kita dapat mengidentifikasi daerah-daerah mana yang curah hujannya lebih tinggi dan demikian juga sebaliknya.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}